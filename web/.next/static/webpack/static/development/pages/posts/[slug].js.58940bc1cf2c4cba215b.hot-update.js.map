{"version":3,"file":"static/webpack/static/development/pages/posts/[slug].js.58940bc1cf2c4cba215b.hot-update.js","sources":["webpack:///./src/pages/posts/[slug].tsx"],"sourcesContent":["import {\n  faBriefcase,\n  faBriefcaseMedical,\n  faBusAlt,\n  faBusinessTime,\n  faClock,\n  faDrumstickBite,\n  faMagic,\n  faMapMarkedAlt,\n  faMoneyBill,\n  faTicketAlt,\n  faUser,\n  faUserClock,\n  faUserTie,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from '@material-ui/core';\nimport { JobPostingJsonLd } from 'next-seo';\nimport Linkify from 'react-linkify';\nimport styled from 'styled-components';\n\nimport { SearchContainer, SearchHeader, SearchMain } from '.';\nimport { Breadcumb } from '../../components/elements/ui/Breadcumb';\nimport { InfoTag } from '../../components/elements/ui/InfoTag';\nimport { PostCTA } from '../../components/pages/posts/PostCTA';\nimport { SearchBar } from '../../components/pages/posts/SearchBar';\nimport { SearchLogo } from '../../components/pages/posts/SearchLogo';\nimport { NextSEOPost } from '../../components/seo/NextSEOPost';\nimport { appEnv } from '../../constants/Env.constant';\nimport { colors } from '../../constants/UI/Colors.constant';\nimport { H1, H2, Small } from '../../constants/UI/Common.constant';\nimport { UI } from '../../constants/UI/UI.constant';\nimport { DateHelper } from '../../helpers/DateHelper';\nimport { TS } from '../../helpers/LanguageHelper';\nimport { loadCountryProvinces } from '../../store/actions/form.actions';\nimport { postReadOne } from '../../store/actions/post.action';\nimport { IProvince } from '../../types/Form.types';\nimport { IPost, PostBenefits, PostCategory, PostPositionType } from '../../types/Post.types';\n\ninterface IProps {\n  post: IPost;\n  provinces: IProvince[];\n}\n\nconst IndividualPage = ({ post, provinces }: IProps) => {\n  //human readable date\n  const humanDate = DateHelper.displayHumanDate(post.createdAt);\n\n  const onRenderPositionType = () => {\n    switch (post.positionType) {\n      case PostPositionType.FullTime:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faBriefcase} />}\n            text={TS.string(\"post\", \"postPositionTypeFullTime\")}\n          />\n        );\n\n      case PostPositionType.PartTime:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faClock} />}\n            text={TS.string(\"post\", \"postPositionTypePartTime\")}\n          />\n        );\n\n      case PostPositionType.Custom:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faUserClock} />}\n            text={TS.string(\"post\", \"postPositionTypeCustom\")}\n          />\n        );\n    }\n  };\n\n  const onRenderExperienceRequired = () => {\n    if (post.experienceRequired) {\n      return (\n        <InfoTag\n          icon={<FontAwesomeIcon icon={faMagic} />}\n          text={TS.string(\"post\", \"postExperienceNotRequired\")}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  const onRenderCategory = () => {\n    switch (post.category) {\n      case PostCategory.Job:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faUserTie} />}\n            text={TS.string(\"post\", \"postCategoryJob\")}\n          />\n        );\n      case PostCategory.Internship:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faUser} />}\n            text={TS.string(\"post\", \"postCategoryInternship\")}\n          />\n        );\n\n      case PostCategory.Temporary:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faBusinessTime} />}\n            text={TS.string(\"post\", \"postCategoryTemporary\")}\n          />\n        );\n    }\n  };\n\n  const onRenderBenefits = () => {\n    return post.benefits?.map(benefit => {\n      switch (benefit) {\n        case PostBenefits.FoodTicket:\n          return (\n            <InfoTag\n              key={benefit}\n              icon={<FontAwesomeIcon icon={faTicketAlt} />}\n              text={TS.string(\"post\", \"postBenefitFoodTicket\")}\n            />\n          );\n        case PostBenefits.HealthCare:\n          return (\n            <InfoTag\n              key={benefit}\n              icon={<FontAwesomeIcon icon={faBriefcaseMedical} />}\n              text={TS.string(\"post\", \"postBenefitHealthCare\")}\n            />\n          );\n        case PostBenefits.Meal:\n          return (\n            <InfoTag\n              key={benefit}\n              icon={<FontAwesomeIcon icon={faDrumstickBite} />}\n              text={TS.string(\"post\", \"postBenefitMeal\")}\n            />\n          );\n        case PostBenefits.Transportation:\n          return (\n            <InfoTag\n              key={benefit}\n              icon={<FontAwesomeIcon icon={faBusAlt} />}\n              text={TS.string(\"post\", \"postBenefitTransportation\")}\n            />\n          );\n      }\n    });\n  };\n\n  const onRenderSalary = () => {\n    return (\n      post.monthlySalary && (\n        <InfoTag\n          icon={<FontAwesomeIcon icon={faMoneyBill} />}\n          text={`${TS.string(\"post\", \"currency\")} ${post.monthlySalary}`}\n        />\n      )\n    );\n  };\n\n  const getFacebookLink = (stateCode: string) => {\n    const facebookGroupLinks = {\n      ES: \"https://www.facebook.com/groups/empregoses/\",\n      SP: \"https://www.facebook.com/groups/empregosessp/\",\n      MG: \"https://www.facebook.com/groups/grupoempregosbh/\"\n    };\n\n    return facebookGroupLinks[stateCode];\n  };\n\n  const getJobJsonLDType = () => {\n    switch (post.positionType) {\n      case PostPositionType.FullTime:\n        return \"FULL_TIME\";\n      case PostPositionType.PartTime:\n        return \"PART_TIME\";\n      default:\n        return \"OTHER\";\n    }\n  };\n\n  return (\n    <>\n      <NextSEOPost\n        jobRole={post.jobRoles[0] || post.title}\n        title={post.title}\n        description={post.content}\n        link={post.externalUrl || appEnv.serverUrl}\n        city={post.city}\n        stateCode={post.stateCode}\n      />\n      <JobPostingJsonLd\n        datePosted={post.createdAt}\n        description={post.content}\n        hiringOrganization={{\n          name: post.companyName,\n          sameAs: null\n        }}\n        jobLocation={{\n          streetAddress: post.neighborhood,\n          addressLocality: post.city,\n          addressRegion: post.stateCode,\n          postalCode: post.zipCode,\n          addressCountry: \"Brasil\"\n        }}\n        title={post.title}\n        baseSalary={{\n          currency: \"BRL\",\n          value: post.monthlySalary,\n          unitText: \"MONTH\"\n        }}\n        employmentType={getJobJsonLDType()}\n        jobLocationType={null}\n        validThrough={null}\n        applicantLocationRequirements={null}\n      />\n      <SearchContainer>\n        <SearchHeader>\n          <SearchLogo />\n          <SearchBar provinces={provinces} />\n        </SearchHeader>\n      </SearchContainer>\n\n      <Cover>\n        <PostCTA\n          phone={post.phone}\n          externalUrl={post.externalUrl}\n          email={post.email}\n        />\n      </Cover>\n      <SearchContainer>\n        <SearchMain>\n          <H1>{post.title}</H1>\n          <Breadcumb parent={post.sector} child={post.jobRoles.join(\", \")} />\n          <Small>{humanDate}</Small>\n          <ContentArea>\n            <Linkify properties={{ target: \"_blank\" }}>{post.content}</Linkify>\n          </ContentArea>\n\n          <InfoTagsContainer>\n            <InfoTag\n              icon={<FontAwesomeIcon icon={faMapMarkedAlt} />}\n              text={`${post.city}, ${post.stateCode}`}\n            />\n            {onRenderPositionType()}\n            {onRenderExperienceRequired()}\n            {onRenderCategory()}\n            {onRenderBenefits()}\n            {onRenderSalary()}\n          </InfoTagsContainer>\n          <H2>{TS.string(\"global\", \"joinOurCommunity\")}</H2>\n          <CommunitiesContainer>\n            <a\n              href={`http://bit.ly/emprego-urgente-${post.stateCode.toLowerCase()}4`}\n              target=\"_blank\"\n            >\n              <Button variant=\"outlined\" className=\"btnWhatsapp\">\n                WHATSAPP\n              </Button>\n            </a>\n\n            <a href={getFacebookLink(post.stateCode)} target=\"_blank\">\n              <Button variant=\"outlined\" className=\"btnFacebook\">\n                FACEBOOK\n              </Button>\n            </a>\n\n            <a href={`https://bit.ly/emprego-urgente-link1`} target=\"_blank\">\n              <Button variant=\"outlined\" className=\"btnEU\">\n                APP\n              </Button>\n            </a>\n          </CommunitiesContainer>\n        </SearchMain>\n      </SearchContainer>\n    </>\n  );\n};\n\nIndividualPage.getInitialProps = async ctx => {\n  const { slug } = ctx.query;\n\n  await ctx.store.dispatch(loadCountryProvinces(appEnv.appCountry));\n  await ctx.store.dispatch(postReadOne(null, slug));\n  const provinces = ctx.store.getState().formReducer.states;\n  const post = ctx.store.getState().postReducer.post;\n\n  return {\n    post,\n    provinces\n  };\n};\n\nexport default IndividualPage;\n\nconst Cover = styled.div`\n  width: 100%;\n  height: 200px;\n  background-color: ${colors.primary};\n  background-repeat: no-repeat;\n  background-image: url(\"/images/posts/post-1.webp\");\n  background-blend-mode: multiply;\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst InfoTagsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin-top: 3rem;\n  margin-bottom: 3rem;\n\n  /*MOBILE ONLY CODE*/\n  @media screen and (max-width: ${UI.mediumLayoutBreak}px) {\n    justify-content: center;\n  }\n`;\n\nconst ContentArea = styled.p`\n  color: ${colors.silver};\n  white-space: pre-wrap;\n`;\n\nconst CommunitiesContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 80%;\n  justify-content: space-between;\n\n  .btnWhatsapp {\n    background-color: white;\n    border: 1px solid ${colors.whatsappGreen};\n    color: ${colors.whatsappGreen};\n  }\n  .btnFacebook {\n    background-color: white;\n    border: 1px solid ${colors.facebookBlue};\n    color: ${colors.facebookBlue};\n  }\n\n  .btnEU {\n    background-color: white;\n    border: 1px solid ${colors.accent};\n    color: ${colors.accent};\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAeA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AAyBA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAwBA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;AAkCA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyaA;AAEA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}