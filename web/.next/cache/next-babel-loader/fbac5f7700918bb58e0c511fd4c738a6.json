{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/jonit/Personal_projects/emprego-urgente/empregourgente-backend/web/src/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport withRedux from 'next-redux-wrapper';\nimport App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { NextSEOApp } from '../components/seo/NextSEOApp';\nimport { MUITheme } from '../constants/UI/Theme.constant';\nimport { persistor, store } from '../store/reducers/persist.store';\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      // pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n      // @ts-ignore\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          initialStore = _this$props.store;\n      return __jsx(Provider, {\n        store: initialStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, __jsx(PersistGate, {\n        loading: null,\n        persistor: persistor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, __jsx(NextSEOApp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }), __jsx(ThemeProvider, {\n        theme: MUITheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx;\n\n              if (!Component.getInitialProps) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 4:\n              _context.t0 = _context.sent;\n              _context.next = 8;\n              break;\n\n            case 7:\n              _context.t0 = {};\n\n            case 8:\n              pageProps = _context.t0;\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App); // makeStore function that returns a new store for every request\n\n\nvar makeStore = function makeStore() {\n  return store;\n}; // withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/home/jonit/Personal_projects/emprego-urgente/empregourgente-backend/web/src/pages/_app.tsx"],"names":["ThemeProvider","withRedux","App","React","Provider","PersistGate","NextSEOApp","MUITheme","persistor","store","MyApp","props","Component","pageProps","initialStore","ctx","getInitialProps","makeStore"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,iCAAjC;;IAEMC,K;;;;;;;;;;;;;6BAUY;AACd;AACA;AAFc,wBAGwC,KAAKC,KAH7C;AAAA,UAGNC,SAHM,eAGNA,SAHM;AAAA,UAGKC,SAHL,eAGKA,SAHL;AAAA,UAGuBC,YAHvB,eAGgBL,KAHhB;AAKd,aACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAa,QAAA,OAAO,EAAE,IAAtB;AAA4B,QAAA,SAAS,EAAEN,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,aAAD;AAAe,QAAA,KAAK,EAAED,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAFF,CADF,CADF;AAUD;;;;;;;;;AAxBqCD,cAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;;mBAC7BH,SAAS,CAACI,e;;;;;;+CAClBJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;;;;;;4BACN,E;;;AAFEF,cAAAA,S;+CAKC;AAAEA,gBAAAA,SAAS,EAATA;AAAF,e;;;;;;;;;;;;EAPSX,G,GA4BpB;;;AACA,IAAMe,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMR,KAAN;AAAA,CAAlB,C,CAEA;;;AACA,eAAeR,SAAS,CAACgB,SAAD,CAAT,CAAqBP,KAArB,CAAf","sourcesContent":["import { ThemeProvider } from '@material-ui/core/styles';\nimport withRedux from 'next-redux-wrapper';\nimport App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { NextSEOApp } from '../components/seo/NextSEOApp';\nimport { MUITheme } from '../constants/UI/Theme.constant';\nimport { persistor, store } from '../store/reducers/persist.store';\n\nclass MyApp extends App {\n  public static async getInitialProps({ Component, ctx }) {\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n\n    // Anything returned here can be accessed by the client\n    return { pageProps };\n  }\n\n  public render() {\n    // pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    // @ts-ignore\n    const { Component, pageProps, store: initialStore } = this.props;\n\n    return (\n      <Provider store={initialStore}>\n        <PersistGate loading={null} persistor={persistor}>\n          <NextSEOApp />\n          <ThemeProvider theme={MUITheme}>\n            <Component {...pageProps} />\n          </ThemeProvider>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\n// makeStore function that returns a new store for every request\nconst makeStore = () => store;\n\n// withRedux wrapper that passes the store to the App Component\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}