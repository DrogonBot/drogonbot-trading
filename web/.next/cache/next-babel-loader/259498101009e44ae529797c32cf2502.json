{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst INITIAL_STATE = {\n  countries: [],\n  states: [],\n  cities: [],\n  jobRoles: [],\n  wizardForm: {\n    resumeWizardForm: {\n      currentStep: 0\n    }\n  },\n  sectors: []\n};\nexport const formReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case READ_COUNTRIES:\n      return _objectSpread({}, state, {\n        countries: action.payload\n      });\n\n    case READ_STATES:\n      return _objectSpread({}, state, {\n        states: action.payload\n      });\n\n    case READ_CITIES:\n      return _objectSpread({}, state, {\n        cities: action.payload\n      });\n\n    case READ_JOB_ROLES:\n      return _objectSpread({}, state, {\n        jobRoles: action.payload\n      });\n\n    case READ_SECTORS:\n      return _objectSpread({}, state, {\n        sectors: action.payload\n      });\n\n    case CLEAR_JOB_ROLES:\n      return _objectSpread({}, state, {\n        jobRoles: INITIAL_STATE.jobRoles\n      });\n\n    case WIZARD_FORM_UPDATE_CURRENT_STEP:\n      return _objectSpread({}, state, {\n        wizardForm: {\n          [action.payload.key]: _objectSpread({}, state.wizardForm[action.payload.key], {\n            currentStep: action.payload.currentStep\n          })\n        }\n      });\n\n    case WIZARD_FORM_UPDATE_TOTAL_STEPS:\n      return _objectSpread({}, state, {\n        wizardForm: {\n          [action.payload.key]: _objectSpread({}, state.wizardForm[action.payload.key], {\n            totalSteps: action.payload.totalSteps\n          })\n        }\n      });\n\n    default:\n      return state;\n  }\n};\nexport const READ_COUNTRIES = \"READ_COUNTRIES\";\nexport const READ_STATES = \"READ_STATES\";\nexport const READ_CITIES = \"READ_CITIES\";\nexport const READ_JOB_ROLES = \"READ_JOB_ROLES\";\nexport const CLEAR_JOB_ROLES = \"CLEAR_JOB_ROLES\";\nexport const READ_SECTORS = \"READ_SECTORS\";\nexport const WIZARD_FORM_UPDATE_CURRENT_STEP = \"WIZARD_FORM_UPDATE_CURRENT_STEP\";\nexport const WIZARD_FORM_UPDATE_TOTAL_STEPS = \"WIZARD_FORM_UPDATE_TOTAL_STEPS\";","map":null,"metadata":{},"sourceType":"module"}