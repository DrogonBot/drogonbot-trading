{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { faBriefcase, faBriefcaseMedical, faBusAlt, faBusinessTime, faClock, faDrumstickBite, faMagic, faMapMarkedAlt, faMoneyBill, faTicketAlt, faUser, faUserClock, faUserTie } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from '@material-ui/core';\nimport { JobPostingJsonLd } from 'next-seo';\nimport Linkify from 'react-linkify';\nimport styled from 'styled-components';\nimport { SearchContainer, SearchHeader, SearchMain } from '.';\nimport { Breadcumb } from '../../components/elements/ui/Breadcumb';\nimport { InfoTag } from '../../components/elements/ui/InfoTag';\nimport { PostCTA } from '../../components/pages/posts/PostCTA';\nimport { SearchBar } from '../../components/pages/posts/SearchBar';\nimport { SearchLogo } from '../../components/pages/posts/SearchLogo';\nimport { appEnv } from '../../constants/Env.constant';\nimport { colors } from '../../constants/UI/Colors.constant';\nimport { H1, H2, Small } from '../../constants/UI/Common.constant';\nimport { UI } from '../../constants/UI/UI.constant';\nimport { DateHelper } from '../../helpers/DateHelper';\nimport { TS } from '../../helpers/LanguageHelper';\nimport { loadCountryProvinces } from '../../store/actions/form.actions';\nimport { postReadOne } from '../../store/actions/post.action';\nimport { PostBenefits, PostCategory, PostPositionType } from '../../types/Post.types';\n\nconst IndividualPage = ({\n  post,\n  provinces\n}) => {\n  const humanDate = DateHelper.displayHumanDate(post.createdAt);\n\n  const onRenderPositionType = () => {\n    switch (post.positionType) {\n      case PostPositionType.FullTime:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faBriefcase\n          }),\n          text: TS.string(\"post\", \"postPositionTypeFullTime\")\n        });\n\n      case PostPositionType.PartTime:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faClock\n          }),\n          text: TS.string(\"post\", \"postPositionTypePartTime\")\n        });\n\n      case PostPositionType.Custom:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faUserClock\n          }),\n          text: TS.string(\"post\", \"postPositionTypeCustom\")\n        });\n    }\n  };\n\n  const onRenderExperienceRequired = () => {\n    if (post.experienceRequired) {\n      return __jsx(InfoTag, {\n        icon: __jsx(FontAwesomeIcon, {\n          icon: faMagic\n        }),\n        text: TS.string(\"post\", \"postExperienceNotRequired\")\n      });\n    }\n\n    return null;\n  };\n\n  const onRenderCategory = () => {\n    switch (post.category) {\n      case PostCategory.Job:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faUserTie\n          }),\n          text: TS.string(\"post\", \"postCategoryJob\")\n        });\n\n      case PostCategory.Internship:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faUser\n          }),\n          text: TS.string(\"post\", \"postCategoryInternship\")\n        });\n\n      case PostCategory.Temporary:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faBusinessTime\n          }),\n          text: TS.string(\"post\", \"postCategoryTemporary\")\n        });\n    }\n  };\n\n  const onRenderBenefits = () => {\n    var _post$benefits;\n\n    return (_post$benefits = post.benefits) === null || _post$benefits === void 0 ? void 0 : _post$benefits.map(benefit => {\n      switch (benefit) {\n        case PostBenefits.FoodTicket:\n          return __jsx(InfoTag, {\n            key: benefit,\n            icon: __jsx(FontAwesomeIcon, {\n              icon: faTicketAlt\n            }),\n            text: TS.string(\"post\", \"postBenefitFoodTicket\")\n          });\n\n        case PostBenefits.HealthCare:\n          return __jsx(InfoTag, {\n            key: benefit,\n            icon: __jsx(FontAwesomeIcon, {\n              icon: faBriefcaseMedical\n            }),\n            text: TS.string(\"post\", \"postBenefitHealthCare\")\n          });\n\n        case PostBenefits.Meal:\n          return __jsx(InfoTag, {\n            key: benefit,\n            icon: __jsx(FontAwesomeIcon, {\n              icon: faDrumstickBite\n            }),\n            text: TS.string(\"post\", \"postBenefitMeal\")\n          });\n\n        case PostBenefits.Transportation:\n          return __jsx(InfoTag, {\n            key: benefit,\n            icon: __jsx(FontAwesomeIcon, {\n              icon: faBusAlt\n            }),\n            text: TS.string(\"post\", \"postBenefitTransportation\")\n          });\n      }\n    });\n  };\n\n  const onRenderSalary = () => {\n    return post.monthlySalary && __jsx(InfoTag, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: faMoneyBill\n      }),\n      text: `${TS.string(\"post\", \"currency\")} ${post.monthlySalary}`\n    });\n  };\n\n  const getFacebookLink = stateCode => {\n    const facebookGroupLinks = {\n      ES: \"https://www.facebook.com/groups/empregoses/\",\n      SP: \"https://www.facebook.com/groups/empregosessp/\",\n      MG: \"https://www.facebook.com/groups/grupoempregosbh/\"\n    };\n    return facebookGroupLinks[stateCode];\n  };\n\n  const getJobJsonLDType = () => {\n    switch (post.positionType) {\n      case PostPositionType.FullTime:\n        return \"FULL_TIME\";\n\n      case PostPositionType.PartTime:\n        return \"PART_TIME\";\n\n      default:\n        return \"OTHER\";\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(JobPostingJsonLd, {\n    datePosted: post.createdAt,\n    description: post.content,\n    hiringOrganization: {\n      name: post.companyName,\n      sameAs: null\n    },\n    jobLocation: {\n      streetAddress: post.neighborhood,\n      addressLocality: post.city,\n      addressRegion: post.stateCode,\n      postalCode: post.zipCode,\n      addressCountry: \"Brasil\"\n    },\n    title: post.title,\n    baseSalary: {\n      currency: \"BRL\",\n      value: post.monthlySalary,\n      unitText: \"MONTH\"\n    },\n    employmentType: getJobJsonLDType(),\n    jobLocationType: null,\n    validThrough: null,\n    applicantLocationRequirements: null\n  }), __jsx(SearchContainer, null, __jsx(SearchHeader, null, __jsx(SearchLogo, null), __jsx(SearchBar, {\n    provinces: provinces\n  }))), __jsx(Cover, null, __jsx(PostCTA, {\n    phone: post.phone,\n    externalUrl: post.externalUrl,\n    email: post.email\n  })), __jsx(SearchContainer, null, __jsx(SearchMain, null, __jsx(H1, null, post.title), __jsx(Breadcumb, {\n    parent: post.sector,\n    child: post.jobRoles.join(\", \")\n  }), __jsx(Small, null, humanDate), __jsx(ContentArea, null, __jsx(Linkify, {\n    properties: {\n      target: \"_blank\"\n    }\n  }, post.content)), __jsx(InfoTagsContainer, null, __jsx(InfoTag, {\n    icon: __jsx(FontAwesomeIcon, {\n      icon: faMapMarkedAlt\n    }),\n    text: `${post.city}, ${post.stateCode}`\n  }), onRenderPositionType(), onRenderExperienceRequired(), onRenderCategory(), onRenderBenefits(), onRenderSalary()), __jsx(H2, null, TS.string(\"global\", \"joinOurCommunity\")), __jsx(CommunitiesContainer, null, __jsx(\"a\", {\n    href: `http://bit.ly/emprego-urgente-${post.stateCode.toLowerCase()}4`,\n    target: \"_blank\"\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    className: \"btnWhatsapp\"\n  }, \"WHATSAPP\")), __jsx(\"a\", {\n    href: getFacebookLink(post.stateCode),\n    target: \"_blank\"\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    className: \"btnFacebook\"\n  }, \"FACEBOOK\")), __jsx(\"a\", {\n    href: `https://bit.ly/emprego-urgente-link1`,\n    target: \"_blank\"\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    className: \"btnEU\"\n  }, \"APP\"))))));\n};\n\nIndividualPage.getInitialProps = async ctx => {\n  const {\n    slug\n  } = ctx.query;\n  await ctx.store.dispatch(loadCountryProvinces(appEnv.appCountry));\n  await ctx.store.dispatch(postReadOne(null, slug));\n  const provinces = ctx.store.getState().formReducer.states;\n  const post = ctx.store.getState().postReducer.post;\n  return {\n    post,\n    provinces\n  };\n};\n\nexport default IndividualPage;\nconst Cover = styled.div.withConfig({\n  displayName: \"slug__Cover\",\n  componentId: \"kkh1jm-0\"\n})([\"width:100%;height:200px;background-color:\", \";background-repeat:no-repeat;background-image:url(\\\"/images/posts/post-1.webp\\\");background-blend-mode:multiply;background-size:cover;background-position:center;display:flex;justify-content:center;align-items:center;\"], colors.primary);\nconst InfoTagsContainer = styled.div.withConfig({\n  displayName: \"slug__InfoTagsContainer\",\n  componentId: \"kkh1jm-1\"\n})([\"display:flex;flex-wrap:wrap;flex-direction:row;justify-content:flex-start;margin-top:3rem;margin-bottom:3rem;@media screen and (max-width:\", \"px){justify-content:center;}\"], UI.mediumLayoutBreak);\nconst ContentArea = styled.p.withConfig({\n  displayName: \"slug__ContentArea\",\n  componentId: \"kkh1jm-2\"\n})([\"color:\", \";white-space:pre-wrap;\"], colors.silver);\nconst CommunitiesContainer = styled.div.withConfig({\n  displayName: \"slug__CommunitiesContainer\",\n  componentId: \"kkh1jm-3\"\n})([\"display:flex;flex-direction:row;flex-wrap:wrap;width:80%;justify-content:space-between;.btnWhatsapp{background-color:white;border:1px solid \", \";color:\", \";}.btnFacebook{background-color:white;border:1px solid \", \";color:\", \";}.btnEU{background-color:white;border:1px solid \", \";color:\", \";}\"], colors.whatsappGreen, colors.whatsappGreen, colors.facebookBlue, colors.facebookBlue, colors.accent, colors.accent);","map":null,"metadata":{},"sourceType":"module"}