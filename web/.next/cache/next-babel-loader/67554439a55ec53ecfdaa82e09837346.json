{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/src/app/src/pages/posts/[slug].tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { faBriefcase, faBriefcaseMedical, faBusAlt, faBusinessTime, faClock, faDrumstickBite, faMagic, faMapMarkedAlt, faMoneyBill, faTicketAlt, faUser, faUserClock, faUserTie } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from '@material-ui/core';\nimport { JobPostingJsonLd } from 'next-seo';\nimport Linkify from 'react-linkify';\nimport styled from 'styled-components';\nimport { SearchContainer, SearchHeader, SearchMain } from '.';\nimport { Breadcumb } from '../../components/elements/ui/Breadcumb';\nimport { InfoTag } from '../../components/elements/ui/InfoTag';\nimport { PostCTA } from '../../components/pages/posts/PostCTA';\nimport { SearchBar } from '../../components/pages/posts/SearchBar';\nimport { SearchLogo } from '../../components/pages/posts/SearchLogo';\nimport { appEnv } from '../../constants/Env.constant';\nimport { colors } from '../../constants/UI/Colors.constant';\nimport { H1, H2, Small } from '../../constants/UI/Common.constant';\nimport { UI } from '../../constants/UI/UI.constant';\nimport { DateHelper } from '../../helpers/DateHelper';\nimport { TS } from '../../helpers/LanguageHelper';\nimport { loadCountryProvinces } from '../../store/actions/form.actions';\nimport { postReadOne } from '../../store/actions/post.action';\nimport { PostBenefits, PostCategory, PostPositionType } from '../../types/Post.types';\n\nvar IndividualPage = function IndividualPage(_ref) {\n  var post = _ref.post,\n      provinces = _ref.provinces;\n  var humanDate = DateHelper.displayHumanDate(post.createdAt);\n\n  var onRenderPositionType = function onRenderPositionType() {\n    switch (post.positionType) {\n      case PostPositionType.FullTime:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faBriefcase,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }\n          }),\n          text: TS.string(\"post\", \"postPositionTypeFullTime\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        });\n\n      case PostPositionType.PartTime:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faClock,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }\n          }),\n          text: TS.string(\"post\", \"postPositionTypePartTime\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        });\n\n      case PostPositionType.Custom:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faUserClock,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }\n          }),\n          text: TS.string(\"post\", \"postPositionTypeCustom\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }\n        });\n    }\n  };\n\n  var onRenderExperienceRequired = function onRenderExperienceRequired() {\n    if (post.experienceRequired) {\n      return __jsx(InfoTag, {\n        icon: __jsx(FontAwesomeIcon, {\n          icon: faMagic,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }\n        }),\n        text: TS.string(\"post\", \"postExperienceNotRequired\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return null;\n  };\n\n  var onRenderCategory = function onRenderCategory() {\n    switch (post.category) {\n      case PostCategory.Job:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faUserTie,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }\n          }),\n          text: TS.string(\"post\", \"postCategoryJob\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }\n        });\n\n      case PostCategory.Internship:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faUser,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }\n          }),\n          text: TS.string(\"post\", \"postCategoryInternship\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }\n        });\n\n      case PostCategory.Temporary:\n        return __jsx(InfoTag, {\n          icon: __jsx(FontAwesomeIcon, {\n            icon: faBusinessTime,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }\n          }),\n          text: TS.string(\"post\", \"postCategoryTemporary\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }\n        });\n    }\n  };\n\n  var onRenderBenefits = function onRenderBenefits() {\n    var _post$benefits;\n\n    return (_post$benefits = post.benefits) === null || _post$benefits === void 0 ? void 0 : _post$benefits.map(function (benefit) {\n      switch (benefit) {\n        case PostBenefits.FoodTicket:\n          return __jsx(InfoTag, {\n            key: benefit,\n            icon: __jsx(FontAwesomeIcon, {\n              icon: faTicketAlt,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }\n            }),\n            text: TS.string(\"post\", \"postBenefitFoodTicket\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }\n          });\n\n        case PostBenefits.HealthCare:\n          return __jsx(InfoTag, {\n            key: benefit,\n            icon: __jsx(FontAwesomeIcon, {\n              icon: faBriefcaseMedical,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }\n            }),\n            text: TS.string(\"post\", \"postBenefitHealthCare\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }\n          });\n\n        case PostBenefits.Meal:\n          return __jsx(InfoTag, {\n            key: benefit,\n            icon: __jsx(FontAwesomeIcon, {\n              icon: faDrumstickBite,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }\n            }),\n            text: TS.string(\"post\", \"postBenefitMeal\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }\n          });\n\n        case PostBenefits.Transportation:\n          return __jsx(InfoTag, {\n            key: benefit,\n            icon: __jsx(FontAwesomeIcon, {\n              icon: faBusAlt,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }\n            }),\n            text: TS.string(\"post\", \"postBenefitTransportation\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }\n          });\n      }\n    });\n  };\n\n  var onRenderSalary = function onRenderSalary() {\n    return post.monthlySalary && __jsx(InfoTag, {\n      icon: __jsx(FontAwesomeIcon, {\n        icon: faMoneyBill,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }),\n      text: \"\".concat(TS.string(\"post\", \"currency\"), \" \").concat(post.monthlySalary),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var getFacebookLink = function getFacebookLink(stateCode) {\n    var facebookGroupLinks = {\n      ES: \"https://www.facebook.com/groups/empregoses/\",\n      SP: \"https://www.facebook.com/groups/empregosessp/\",\n      MG: \"https://www.facebook.com/groups/grupoempregosbh/\"\n    };\n    return facebookGroupLinks[stateCode];\n  };\n\n  var getJobJsonLDType = function getJobJsonLDType() {\n    switch (post.positionType) {\n      case PostPositionType.FullTime:\n        return \"FULL_TIME\";\n\n      case PostPositionType.PartTime:\n        return \"PART_TIME\";\n\n      default:\n        return \"OTHER\";\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(JobPostingJsonLd, {\n    datePosted: post.createdAt,\n    description: post.content,\n    hiringOrganization: {\n      name: post.companyName,\n      sameAs: null\n    },\n    jobLocation: {\n      streetAddress: post.neighborhood,\n      addressLocality: post.city,\n      addressRegion: post.stateCode,\n      postalCode: post.zipCode,\n      addressCountry: \"Brasil\"\n    },\n    title: post.title,\n    baseSalary: {\n      currency: \"BRL\",\n      value: post.monthlySalary,\n      unitText: \"MONTH\"\n    },\n    employmentType: getJobJsonLDType(),\n    jobLocationType: null,\n    validThrough: null,\n    applicantLocationRequirements: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }), __jsx(SearchContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, __jsx(SearchHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, __jsx(SearchLogo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }), __jsx(SearchBar, {\n    provinces: provinces,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }))), __jsx(Cover, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, __jsx(PostCTA, {\n    phone: post.phone,\n    externalUrl: post.externalUrl,\n    email: post.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  })), __jsx(SearchContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, __jsx(SearchMain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, __jsx(H1, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, post.title), __jsx(Breadcumb, {\n    parent: post.sector,\n    child: post.jobRoles.join(\", \"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }), __jsx(Small, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, humanDate), __jsx(ContentArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, __jsx(Linkify, {\n    properties: {\n      target: \"_blank\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, post.content)), __jsx(InfoTagsContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, __jsx(InfoTag, {\n    icon: __jsx(FontAwesomeIcon, {\n      icon: faMapMarkedAlt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }),\n    text: \"\".concat(post.city, \", \").concat(post.stateCode),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }), onRenderPositionType(), onRenderExperienceRequired(), onRenderCategory(), onRenderBenefits(), onRenderSalary()), __jsx(H2, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, TS.string(\"global\", \"joinOurCommunity\")), __jsx(CommunitiesContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: \"http://bit.ly/emprego-urgente-\".concat(post.stateCode.toLowerCase(), \"4\"),\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    className: \"btnWhatsapp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, \"WHATSAPP\")), __jsx(\"a\", {\n    href: getFacebookLink(post.stateCode),\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    className: \"btnFacebook\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, \"FACEBOOK\")), __jsx(\"a\", {\n    href: \"https://bit.ly/emprego-urgente-link1\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    className: \"btnEU\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, \"APP\"))))));\n};\n\nIndividualPage.getInitialProps = function _callee(ctx) {\n  var slug, provinces, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          slug = ctx.query.slug;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(ctx.store.dispatch(loadCountryProvinces(appEnv.appCountry)));\n\n        case 3:\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(ctx.store.dispatch(postReadOne(null, slug)));\n\n        case 5:\n          provinces = ctx.store.getState().formReducer.states;\n          post = ctx.store.getState().postReducer.post;\n          return _context.abrupt(\"return\", {\n            post: post,\n            provinces: provinces\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default IndividualPage;\nvar Cover = styled.div.withConfig({\n  displayName: \"slug__Cover\",\n  componentId: \"kkh1jm-0\"\n})([\"width:100%;height:200px;background-color:\", \";background-repeat:no-repeat;background-image:url(\\\"/images/posts/post-1.webp\\\");background-blend-mode:multiply;background-size:cover;background-position:center;display:flex;justify-content:center;align-items:center;\"], colors.primary);\nvar InfoTagsContainer = styled.div.withConfig({\n  displayName: \"slug__InfoTagsContainer\",\n  componentId: \"kkh1jm-1\"\n})([\"display:flex;flex-wrap:wrap;flex-direction:row;justify-content:flex-start;margin-top:3rem;margin-bottom:3rem;@media screen and (max-width:\", \"px){justify-content:center;}\"], UI.mediumLayoutBreak);\nvar ContentArea = styled.p.withConfig({\n  displayName: \"slug__ContentArea\",\n  componentId: \"kkh1jm-2\"\n})([\"color:\", \";white-space:pre-wrap;\"], colors.silver);\nvar CommunitiesContainer = styled.div.withConfig({\n  displayName: \"slug__CommunitiesContainer\",\n  componentId: \"kkh1jm-3\"\n})([\"display:flex;flex-direction:row;flex-wrap:wrap;width:80%;justify-content:space-between;.btnWhatsapp{background-color:white;border:1px solid \", \";color:\", \";}.btnFacebook{background-color:white;border:1px solid \", \";color:\", \";}.btnEU{background-color:white;border:1px solid \", \";color:\", \";}\"], colors.whatsappGreen, colors.whatsappGreen, colors.facebookBlue, colors.facebookBlue, colors.accent, colors.accent);","map":{"version":3,"sources":["/usr/src/app/src/pages/posts/[slug].tsx"],"names":["faBriefcase","faBriefcaseMedical","faBusAlt","faBusinessTime","faClock","faDrumstickBite","faMagic","faMapMarkedAlt","faMoneyBill","faTicketAlt","faUser","faUserClock","faUserTie","FontAwesomeIcon","Button","JobPostingJsonLd","Linkify","styled","SearchContainer","SearchHeader","SearchMain","Breadcumb","InfoTag","PostCTA","SearchBar","SearchLogo","appEnv","colors","H1","H2","Small","UI","DateHelper","TS","loadCountryProvinces","postReadOne","PostBenefits","PostCategory","PostPositionType","IndividualPage","post","provinces","humanDate","displayHumanDate","createdAt","onRenderPositionType","positionType","FullTime","string","PartTime","Custom","onRenderExperienceRequired","experienceRequired","onRenderCategory","category","Job","Internship","Temporary","onRenderBenefits","benefits","map","benefit","FoodTicket","HealthCare","Meal","Transportation","onRenderSalary","monthlySalary","getFacebookLink","stateCode","facebookGroupLinks","ES","SP","MG","getJobJsonLDType","content","name","companyName","sameAs","streetAddress","neighborhood","addressLocality","city","addressRegion","postalCode","zipCode","addressCountry","title","currency","value","unitText","phone","externalUrl","email","sector","jobRoles","join","target","toLowerCase","getInitialProps","ctx","slug","query","store","dispatch","appCountry","getState","formReducer","states","postReducer","Cover","div","primary","InfoTagsContainer","mediumLayoutBreak","ContentArea","p","silver","CommunitiesContainer","whatsappGreen","facebookBlue","accent"],"mappings":"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","sourcesContent":["import {\n  faBriefcase,\n  faBriefcaseMedical,\n  faBusAlt,\n  faBusinessTime,\n  faClock,\n  faDrumstickBite,\n  faMagic,\n  faMapMarkedAlt,\n  faMoneyBill,\n  faTicketAlt,\n  faUser,\n  faUserClock,\n  faUserTie,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from '@material-ui/core';\nimport { JobPostingJsonLd } from 'next-seo';\nimport Linkify from 'react-linkify';\nimport styled from 'styled-components';\n\nimport { SearchContainer, SearchHeader, SearchMain } from '.';\nimport { Breadcumb } from '../../components/elements/ui/Breadcumb';\nimport { InfoTag } from '../../components/elements/ui/InfoTag';\nimport { PostCTA } from '../../components/pages/posts/PostCTA';\nimport { SearchBar } from '../../components/pages/posts/SearchBar';\nimport { SearchLogo } from '../../components/pages/posts/SearchLogo';\nimport { appEnv } from '../../constants/Env.constant';\nimport { colors } from '../../constants/UI/Colors.constant';\nimport { H1, H2, Small } from '../../constants/UI/Common.constant';\nimport { UI } from '../../constants/UI/UI.constant';\nimport { DateHelper } from '../../helpers/DateHelper';\nimport { TS } from '../../helpers/LanguageHelper';\nimport { loadCountryProvinces } from '../../store/actions/form.actions';\nimport { postReadOne } from '../../store/actions/post.action';\nimport { IProvince } from '../../types/Form.types';\nimport { IPost, PostBenefits, PostCategory, PostPositionType } from '../../types/Post.types';\n\ninterface IProps {\n  post: IPost;\n  provinces: IProvince[];\n}\n\nconst IndividualPage = ({ post, provinces }: IProps) => {\n  const humanDate = DateHelper.displayHumanDate(post.createdAt);\n\n  const onRenderPositionType = () => {\n    switch (post.positionType) {\n      case PostPositionType.FullTime:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faBriefcase} />}\n            text={TS.string(\"post\", \"postPositionTypeFullTime\")}\n          />\n        );\n\n      case PostPositionType.PartTime:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faClock} />}\n            text={TS.string(\"post\", \"postPositionTypePartTime\")}\n          />\n        );\n\n      case PostPositionType.Custom:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faUserClock} />}\n            text={TS.string(\"post\", \"postPositionTypeCustom\")}\n          />\n        );\n    }\n  };\n\n  const onRenderExperienceRequired = () => {\n    if (post.experienceRequired) {\n      return (\n        <InfoTag\n          icon={<FontAwesomeIcon icon={faMagic} />}\n          text={TS.string(\"post\", \"postExperienceNotRequired\")}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  const onRenderCategory = () => {\n    switch (post.category) {\n      case PostCategory.Job:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faUserTie} />}\n            text={TS.string(\"post\", \"postCategoryJob\")}\n          />\n        );\n      case PostCategory.Internship:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faUser} />}\n            text={TS.string(\"post\", \"postCategoryInternship\")}\n          />\n        );\n\n      case PostCategory.Temporary:\n        return (\n          <InfoTag\n            icon={<FontAwesomeIcon icon={faBusinessTime} />}\n            text={TS.string(\"post\", \"postCategoryTemporary\")}\n          />\n        );\n    }\n  };\n\n  const onRenderBenefits = () => {\n    return post.benefits?.map((benefit) => {\n      switch (benefit) {\n        case PostBenefits.FoodTicket:\n          return (\n            <InfoTag\n              key={benefit}\n              icon={<FontAwesomeIcon icon={faTicketAlt} />}\n              text={TS.string(\"post\", \"postBenefitFoodTicket\")}\n            />\n          );\n        case PostBenefits.HealthCare:\n          return (\n            <InfoTag\n              key={benefit}\n              icon={<FontAwesomeIcon icon={faBriefcaseMedical} />}\n              text={TS.string(\"post\", \"postBenefitHealthCare\")}\n            />\n          );\n        case PostBenefits.Meal:\n          return (\n            <InfoTag\n              key={benefit}\n              icon={<FontAwesomeIcon icon={faDrumstickBite} />}\n              text={TS.string(\"post\", \"postBenefitMeal\")}\n            />\n          );\n        case PostBenefits.Transportation:\n          return (\n            <InfoTag\n              key={benefit}\n              icon={<FontAwesomeIcon icon={faBusAlt} />}\n              text={TS.string(\"post\", \"postBenefitTransportation\")}\n            />\n          );\n      }\n    });\n  };\n\n  const onRenderSalary = () => {\n    return (\n      post.monthlySalary && (\n        <InfoTag\n          icon={<FontAwesomeIcon icon={faMoneyBill} />}\n          text={`${TS.string(\"post\", \"currency\")} ${post.monthlySalary}`}\n        />\n      )\n    );\n  };\n\n  const getFacebookLink = (stateCode: string) => {\n    const facebookGroupLinks = {\n      ES: \"https://www.facebook.com/groups/empregoses/\",\n      SP: \"https://www.facebook.com/groups/empregosessp/\",\n      MG: \"https://www.facebook.com/groups/grupoempregosbh/\",\n    };\n\n    return facebookGroupLinks[stateCode];\n  };\n\n  const getJobJsonLDType = () => {\n    switch (post.positionType) {\n      case PostPositionType.FullTime:\n        return \"FULL_TIME\";\n      case PostPositionType.PartTime:\n        return \"PART_TIME\";\n      default:\n        return \"OTHER\";\n    }\n  };\n\n  return (\n    <>\n      <JobPostingJsonLd\n        datePosted={post.createdAt}\n        description={post.content}\n        hiringOrganization={{\n          name: post.companyName,\n          sameAs: null,\n        }}\n        jobLocation={{\n          streetAddress: post.neighborhood,\n          addressLocality: post.city,\n          addressRegion: post.stateCode,\n          postalCode: post.zipCode,\n          addressCountry: \"Brasil\",\n        }}\n        title={post.title}\n        baseSalary={{\n          currency: \"BRL\",\n          value: post.monthlySalary,\n          unitText: \"MONTH\",\n        }}\n        employmentType={getJobJsonLDType()}\n        jobLocationType={null}\n        validThrough={null}\n        applicantLocationRequirements={null}\n      />\n      <SearchContainer>\n        <SearchHeader>\n          <SearchLogo />\n          <SearchBar provinces={provinces} />\n        </SearchHeader>\n      </SearchContainer>\n\n      <Cover>\n        <PostCTA\n          phone={post.phone}\n          externalUrl={post.externalUrl}\n          email={post.email}\n        />\n      </Cover>\n      <SearchContainer>\n        <SearchMain>\n          <H1>{post.title}</H1>\n          <Breadcumb parent={post.sector} child={post.jobRoles.join(\", \")} />\n          <Small>{humanDate}</Small>\n          <ContentArea>\n            <Linkify properties={{ target: \"_blank\" }}>{post.content}</Linkify>\n          </ContentArea>\n\n          <InfoTagsContainer>\n            <InfoTag\n              icon={<FontAwesomeIcon icon={faMapMarkedAlt} />}\n              text={`${post.city}, ${post.stateCode}`}\n            />\n            {onRenderPositionType()}\n            {onRenderExperienceRequired()}\n            {onRenderCategory()}\n            {onRenderBenefits()}\n            {onRenderSalary()}\n          </InfoTagsContainer>\n          <H2>{TS.string(\"global\", \"joinOurCommunity\")}</H2>\n          <CommunitiesContainer>\n            <a\n              href={`http://bit.ly/emprego-urgente-${post.stateCode.toLowerCase()}4`}\n              target=\"_blank\"\n            >\n              <Button variant=\"outlined\" className=\"btnWhatsapp\">\n                WHATSAPP\n              </Button>\n            </a>\n\n            <a href={getFacebookLink(post.stateCode)} target=\"_blank\">\n              <Button variant=\"outlined\" className=\"btnFacebook\">\n                FACEBOOK\n              </Button>\n            </a>\n\n            <a href={`https://bit.ly/emprego-urgente-link1`} target=\"_blank\">\n              <Button variant=\"outlined\" className=\"btnEU\">\n                APP\n              </Button>\n            </a>\n          </CommunitiesContainer>\n        </SearchMain>\n      </SearchContainer>\n    </>\n  );\n};\n\nIndividualPage.getInitialProps = async (ctx) => {\n  const { slug } = ctx.query;\n\n  await ctx.store.dispatch(loadCountryProvinces(appEnv.appCountry));\n  await ctx.store.dispatch(postReadOne(null, slug));\n  const provinces = ctx.store.getState().formReducer.states;\n  const post = ctx.store.getState().postReducer.post;\n\n  return {\n    post,\n    provinces,\n  };\n};\n\nexport default IndividualPage;\n\nconst Cover = styled.div`\n  width: 100%;\n  height: 200px;\n  background-color: ${colors.primary};\n  background-repeat: no-repeat;\n  background-image: url(\"/images/posts/post-1.webp\");\n  background-blend-mode: multiply;\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst InfoTagsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin-top: 3rem;\n  margin-bottom: 3rem;\n\n  /*MOBILE ONLY CODE*/\n  @media screen and (max-width: ${UI.mediumLayoutBreak}px) {\n    justify-content: center;\n  }\n`;\n\nconst ContentArea = styled.p`\n  color: ${colors.silver};\n  white-space: pre-wrap;\n`;\n\nconst CommunitiesContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 80%;\n  justify-content: space-between;\n\n  .btnWhatsapp {\n    background-color: white;\n    border: 1px solid ${colors.whatsappGreen};\n    color: ${colors.whatsappGreen};\n  }\n  .btnFacebook {\n    background-color: white;\n    border: 1px solid ${colors.facebookBlue};\n    color: ${colors.facebookBlue};\n  }\n\n  .btnEU {\n    background-color: white;\n    border: 1px solid ${colors.accent};\n    color: ${colors.accent};\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}