{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { appEnv, ENV } from '../constants/Env.constant';\nimport { EnvironmentTypes } from '../types/Global.types';\nimport { TS } from './LanguageHelper';\nexport var APIHelper = function APIHelper() {\n  _classCallCheck(this, APIHelper);\n};\n\n_defineProperty(APIHelper, \"request\", function _callee(method, url, data) {\n  var useAuth,\n      customHeaders,\n      onTimeoutCallback,\n      timeout,\n      AUTH_HEADERS,\n      token,\n      GUEST_HEADERS,\n      abort,\n      timeoutCallback,\n      response,\n      _args = arguments;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          useAuth = _args.length > 3 && _args[3] !== undefined ? _args[3] : true;\n          customHeaders = _args.length > 4 && _args[4] !== undefined ? _args[4] : {};\n          onTimeoutCallback = _args.length > 5 && _args[5] !== undefined ? _args[5] : function () {\n            return null;\n          };\n          timeout = _args.length > 6 && _args[6] !== undefined ? _args[6] : 5000;\n          _context.prev = 4;\n\n          if (!useAuth) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(window.localStorage.getItem(\"token\"));\n\n        case 8:\n          token = _context.sent;\n          AUTH_HEADERS = {\n            Authorization: \"Bearer \".concat(token),\n            \"Content-type\": \"application/json\"\n          };\n\n        case 10:\n          GUEST_HEADERS = {\n            \"Content-type\": \"application/json\"\n          }; // prepare connection timeout callback\n\n          abort = axios.CancelToken.source();\n          timeoutCallback = setTimeout(function () {\n            abort.cancel(\"Timeout of \".concat(timeout, \"ms.\"));\n\n            if (onTimeoutCallback() !== null) {\n              onTimeoutCallback();\n            } else {\n              console.log(\"request timeout\");\n              alert(TS.string(\"global\", \"requestTimeoutTitle\"));\n              Router.push(\"/login\");\n            }\n          }, timeout);\n\n          if (ENV === EnvironmentTypes.Development) {\n            console.log(\"Request to: \".concat(appEnv.serverUrl).concat(url));\n          } // execute request\n\n\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(axios({\n            method: method,\n            url: \"\".concat(appEnv.serverUrl).concat(url),\n            data: data,\n            cancelToken: abort.token,\n            validateStatus: function validateStatus(status) {\n              return status >= 200 && status <= 500; // default\n            },\n            headers: useAuth ? _objectSpread({}, AUTH_HEADERS, {}, customHeaders) : _objectSpread({}, GUEST_HEADERS, {}, customHeaders)\n          }));\n\n        case 16:\n          response = _context.sent;\n\n          // If user is not authenticated...\n          // 401 = Unauthorized status\n          if (response.status === 401) {\n            console.log(\"User is not authenticated. Redirecting to Login...\"); // clear current redux store\n            // persistor.purge();\n\n            console.log(\"authentication error\");\n            alert(TS.string(\"account\", \"loginUserNotAuthenticated\"));\n            Router.push(\"/login\"); // NavigationHelper.navigate(\"Auth\", null);\n          }\n\n          clearTimeout(timeoutCallback);\n          return _context.abrupt(\"return\", response);\n\n        case 22:\n          _context.prev = 22;\n          _context.t0 = _context[\"catch\"](4);\n          console.log(_context.t0);\n\n        case 25:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4, 22]], Promise);\n});","map":null,"metadata":{},"sourceType":"module"}