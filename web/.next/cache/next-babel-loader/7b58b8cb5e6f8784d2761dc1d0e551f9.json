{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport var GenericHelper = function GenericHelper() {\n  _classCallCheck(this, GenericHelper);\n};\n\n_defineProperty(GenericHelper, \"parseMaskedInput\", function (unit, delimiter, value) {\n  var parsedValue = value.replace(unit, \"\").replace(/\\./g, \"\").replace(/\\,/g, delimiter);\n  return parseFloat(parsedValue);\n});\n\n_defineProperty(GenericHelper, \"generateUrlParams\", function (baseUrl, params) {\n  var values = Object.keys(params).map(function (key) {\n    return params[key];\n  });\n  var everyNull = values.every(function (value) {\n    return value === null || undefined;\n  });\n\n  if (everyNull) {\n    return baseUrl;\n  }\n\n  baseUrl += \"?\";\n  Object.entries(params).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    if (value) {\n      baseUrl += \"\".concat(key, \"=\").concat(value, \"&\");\n    }\n  });\n  baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n  return baseUrl;\n});","map":{"version":3,"sources":["/home/jonit/Personal_projects/emprego-urgente/empregourgente-backend/web/src/helpers/GenericHelper.ts"],"names":["GenericHelper","unit","delimiter","value","parsedValue","replace","parseFloat","baseUrl","params","values","Object","keys","map","key","everyNull","every","undefined","entries","slice","length"],"mappings":";;;AAAA,WAAaA,aAAb;AAAA;AAAA;;gBAAaA,a,sBACsB,UAC/BC,IAD+B,EAE/BC,SAF+B,EAG/BC,KAH+B,EAIpB;AACX,MAAMC,WAAW,GAAGD,KAAK,CACtBE,OADiB,CACTJ,IADS,EACH,EADG,EAEjBI,OAFiB,CAET,KAFS,EAEF,EAFE,EAGjBA,OAHiB,CAGT,KAHS,EAGFH,SAHE,CAApB;AAKA,SAAOI,UAAU,CAACF,WAAD,CAAjB;AACD,C;;gBAZUJ,a,uBAcuB,UAACO,OAAD,EAAUC,MAAV,EAAqB;AACrD,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,GAApB,CAAwB,UAAAC,GAAG;AAAA,WAAIL,MAAM,CAACK,GAAD,CAAV;AAAA,GAA3B,CAAf;AAEA,MAAMC,SAAS,GAAGL,MAAM,CAACM,KAAP,CAAa,UAAAZ,KAAK;AAAA,WAAIA,KAAK,KAAK,IAAV,IAAkBa,SAAtB;AAAA,GAAlB,CAAlB;;AAEA,MAAIF,SAAJ,EAAe;AACb,WAAOP,OAAP;AACD;;AAEDA,EAAAA,OAAO,OAAP;AAEAG,EAAAA,MAAM,CAACO,OAAP,CAAeT,MAAf,EAAuBI,GAAvB,CAA2B,gBAAkB;AAAA;AAAA,QAAhBC,GAAgB;AAAA,QAAXV,KAAW;;AAC3C,QAAIA,KAAJ,EAAW;AACTI,MAAAA,OAAO,cAAOM,GAAP,cAAcV,KAAd,MAAP;AACD;AACF,GAJD;AAMAI,EAAAA,OAAO,GAAGA,OAAO,CAACW,KAAR,CAAc,CAAd,EAAiBX,OAAO,CAACY,MAAR,GAAiB,CAAlC,CAAV;AAEA,SAAOZ,OAAP;AACD,C","sourcesContent":["export class GenericHelper {\n  public static parseMaskedInput = (\n    unit: string,\n    delimiter: \".\",\n    value: string\n  ): number => {\n    const parsedValue = value\n      .replace(unit, \"\")\n      .replace(/\\./g, \"\")\n      .replace(/\\,/g, delimiter);\n\n    return parseFloat(parsedValue);\n  };\n\n  public static generateUrlParams = (baseUrl, params) => {\n    const values = Object.keys(params).map(key => params[key]);\n\n    const everyNull = values.every(value => value === null || undefined);\n\n    if (everyNull) {\n      return baseUrl;\n    }\n\n    baseUrl += `?`;\n\n    Object.entries(params).map(([key, value]) => {\n      if (value) {\n        baseUrl += `${key}=${value}&`;\n      }\n    });\n\n    baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n\n    return baseUrl;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}