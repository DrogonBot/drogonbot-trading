{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/usr/src/app/src/components/pages/posts/PostCTA.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { faEnvelope, faLink, faMobileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { TS } from '../../../helpers/LanguageHelper';\nexport var PostCTA = function PostCTA(_ref) {\n  var email = _ref.email,\n      phone = _ref.phone,\n      externalUrl = _ref.externalUrl;\n  var CTAInfo;\n\n  if (email) {\n    CTAInfo = {\n      icon: faEnvelope,\n      link: \"mailto:\".concat(email),\n      translatedString: \"postApplyBtn\"\n    };\n  } else if (phone) {\n    CTAInfo = {\n      icon: faMobileAlt,\n      link: \"tel:\".concat(phone),\n      translatedString: \"postCallPhone\"\n    };\n  } else if (externalUrl) {\n    CTAInfo = {\n      icon: faLink,\n      link: externalUrl,\n      translatedString: \"postVisitExternalLink\"\n    };\n  }\n\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    href: CTAInfo.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    className: \"wobble-hor-bottom\",\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"large\",\n    startIcon: __jsx(FontAwesomeIcon, {\n      icon: CTAInfo.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, TS.string(\"post\", CTAInfo.translatedString).toUpperCase())));\n};\nvar Container = styled.div.withConfig({\n  displayName: \"PostCTA__Container\",\n  componentId: \"sc-1qn21yj-0\"\n})([\"\"]);","map":{"version":3,"sources":["/usr/src/app/src/components/pages/posts/PostCTA.tsx"],"names":["faEnvelope","faLink","faMobileAlt","FontAwesomeIcon","Button","styled","TS","PostCTA","email","phone","externalUrl","CTAInfo","icon","link","translatedString","string","toUpperCase","Container","div"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,WAA7B,QAAgE,mCAAhE;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,EAAT,QAAmB,iCAAnB;AAcA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA2C;AAAA,MAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,MAAjCC,KAAiC,QAAjCA,KAAiC;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;AAChE,MAAIC,OAAJ;;AAEA,MAAIH,KAAJ,EAAW;AACTG,IAAAA,OAAO,GAAG;AACRC,MAAAA,IAAI,EAAEZ,UADE;AAERa,MAAAA,IAAI,mBAAYL,KAAZ,CAFI;AAGRM,MAAAA,gBAAgB,EAAE;AAHV,KAAV;AAKD,GAND,MAMO,IAAIL,KAAJ,EAAW;AAChBE,IAAAA,OAAO,GAAG;AACRC,MAAAA,IAAI,EAAEV,WADE;AAERW,MAAAA,IAAI,gBAASJ,KAAT,CAFI;AAGRK,MAAAA,gBAAgB,EAAE;AAHV,KAAV;AAKD,GANM,MAMA,IAAIJ,WAAJ,EAAiB;AACtBC,IAAAA,OAAO,GAAG;AACRC,MAAAA,IAAI,EAAEX,MADE;AAERY,MAAAA,IAAI,EAAEH,WAFE;AAGRI,MAAAA,gBAAgB,EAAE;AAHV,KAAV;AAKD;;AAED,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAEH,OAAO,CAACE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,WAHR;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,SAAS,EAAE,MAAC,eAAD;AAAiB,MAAA,IAAI,EAAEF,OAAO,CAACC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGN,EAAE,CAACS,MAAH,CAAU,MAAV,EAAkBJ,OAAO,CAACG,gBAA1B,EAA4CE,WAA5C,EAPH,CADF,CADF,CADF;AAeD,CAtCM;AAwCP,IAAMC,SAAS,GAAGZ,MAAM,CAACa,GAAV;AAAA;AAAA;AAAA,QAAf","sourcesContent":["import { faEnvelope, faLink, faMobileAlt, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport { TS } from '../../../helpers/LanguageHelper';\n\ninterface IProps {\n  email: string;\n  phone: string;\n  externalUrl: string;\n}\n\ninterface ICTAInfo {\n  icon: IconDefinition;\n  link: string;\n  translatedString: string;\n}\n\nexport const PostCTA = ({ email, phone, externalUrl }: IProps) => {\n  let CTAInfo: ICTAInfo;\n\n  if (email) {\n    CTAInfo = {\n      icon: faEnvelope,\n      link: `mailto:${email}`,\n      translatedString: \"postApplyBtn\",\n    };\n  } else if (phone) {\n    CTAInfo = {\n      icon: faMobileAlt,\n      link: `tel:${phone}`,\n      translatedString: \"postCallPhone\",\n    };\n  } else if (externalUrl) {\n    CTAInfo = {\n      icon: faLink,\n      link: externalUrl,\n      translatedString: \"postVisitExternalLink\",\n    };\n  }\n\n  return (\n    <Container>\n      <a href={CTAInfo.link}>\n        <Button\n          className=\"wobble-hor-bottom\"\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          startIcon={<FontAwesomeIcon icon={CTAInfo.icon} />}\n        >\n          {TS.string(\"post\", CTAInfo.translatedString).toUpperCase()}\n        </Button>\n      </a>\n    </Container>\n  );\n};\n\nconst Container = styled.div``;\n"]},"metadata":{},"sourceType":"module"}