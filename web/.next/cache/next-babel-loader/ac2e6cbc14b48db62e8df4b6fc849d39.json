{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { MenuItem, Select } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { colors } from '../../../constants/UI/Colors.constant';\nimport { UI } from '../../../constants/UI/UI.constant';\nimport { setSearchKey } from '../../../store/actions/ui.action';\nexport var ProvinceSelector = function ProvinceSelector(_ref) {\n  var provinces = _ref.provinces;\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var searchKeyword = router.query.searchKeyword;\n\n  var _useSelector = useSelector(function (state) {\n    return state.uiReducer;\n  }),\n      searchProvince = _useSelector.searchProvince;\n\n  var onChangeProvince = function onChangeProvince(e) {\n    var selectedProvince;\n    return _regeneratorRuntime.async(function onChangeProvince$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            selectedProvince = e.target.value; //  update our redux (we'll need this info for our post requests)\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(setSearchKey(\"searchProvince\", selectedProvince)));\n\n          case 3:\n            if (searchKeyword) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 5:\n            router.push({\n              pathname: \"/posts\",\n              query: {\n                searchProvince: e.target.value,\n                searchKeyword: searchKeyword,\n                page: 1 // since its a new search, page will be always 1!\n\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onRenderProvinces = function onRenderProvinces() {\n    return provinces.map(function (province) {\n      return __jsx(MenuItem, {\n        key: province.stateName,\n        value: province.stateCode\n      }, province.stateCode);\n    });\n  };\n\n  return __jsx(Container, null, __jsx(Select, {\n    value: searchProvince,\n    onChange: onChangeProvince\n  }, onRenderProvinces()));\n};\nvar Container = styled.div.withConfig({\n  displayName: \"ProvinceSelector__Container\",\n  componentId: \"sc-12bi6i-0\"\n})([\"@media screen and (min-width:\", \"){border-bottom:1px solid silver;}.MuiInput-underline:after{border-bottom:2px solid \", \";}.MuiInputBase-root{height:100%;}.MuiInput-underline:before{border-bottom:unset;}\"], UI.mediumLayoutBreak, colors.primary);","map":null,"metadata":{},"sourceType":"module"}