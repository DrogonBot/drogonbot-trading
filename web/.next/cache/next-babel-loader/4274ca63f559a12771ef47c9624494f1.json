{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/src/app/src/pages/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Router } from 'next/router';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { ProvinceSelector } from '../components/elements/form/ProvinceSelector';\nimport { Header } from '../components/pages/index/Header';\nimport { Logo } from '../components/pages/index/Logo';\nimport { NextSEOIndex } from '../components/seo/NextSEOIndex';\nimport { appEnv } from '../constants/Env.constant';\nimport { colors } from '../constants/UI/Colors.constant';\nimport { UI } from '../constants/UI/UI.constant';\nimport { TS } from '../helpers/LanguageHelper';\nimport { loadCountryProvinces } from '../store/actions/form.actions';\nimport { postClearAll } from '../store/actions/post.action';\nimport { setSearchKey } from '../store/actions/ui.action';\n\nvar Home = function Home(props) {\n  var _useState = useState(\"\"),\n      hookSearchField = _useState[0],\n      hookSetSearchField = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.uiReducer;\n  }),\n      searchProvince = _useSelector.searchProvince;\n\n  var dispatch = useDispatch();\n\n  var onSubmit = function onSubmit(e) {\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"Submitting search\");\n            e.preventDefault(); // validate and set our keyword to the state\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(dispatch(setSearchKey(\"searchKeyword\", hookSearchField)));\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(postClearAll()));\n\n          case 6:\n            // clear post state, if present.\n            Router.push({\n              pathname: \"/posts\",\n              query: {\n                searchProvince: searchProvince,\n                searchKeyword: hookSearchField,\n                page: 1\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(NextSEOIndex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(MainContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), __jsx(Form, {\n    id: \"search-form\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(SearchBarContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(ProvinceSelector, {\n    provinces: props.provinces,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), __jsx(SearchInput, {\n    type: \"text\",\n    placeholder: TS.string(\"form\", \"indexSearchInput\"),\n    name: \"q\",\n    value: hookSearchField,\n    onChange: function onChange(e) {\n      hookSetSearchField(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), __jsx(BlueSearchButton, {\n    type: \"submit\",\n    form: \"search-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), __jsx(CTAButtonsContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, __jsx(SearchLargeDeviceButton, {\n    type: \"submit\",\n    form: \"search-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, TS.string(\"landing\", \"searchButton\"))))));\n};\n\nexport default Home;\n\nHome.getInitialProps = function _callee(ctx) {\n  var provinces;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(ctx.store.dispatch(loadCountryProvinces(appEnv.appCountry)));\n\n        case 2:\n          provinces = ctx.store.getState().formReducer.states;\n          return _context2.abrupt(\"return\", {\n            provinces: provinces\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar MainContainer = styled.main.withConfig({\n  displayName: \"pages__MainContainer\",\n  componentId: \"sc-107eczz-0\"\n})([\"margin-top:75px;i{color:white;}@media screen and (min-width:750px){margin-top:150px;}\"]);\nvar SearchBarContainer = styled.div.withConfig({\n  displayName: \"pages__SearchBarContainer\",\n  componentId: \"sc-107eczz-1\"\n})([\"display:flex;flex-wrap:wrap;flex-direction:row;position:relative;flex:10;.MuiInput-root{position:absolute;top:0;left:21px;height:100%;}\"]);\nvar Form = styled.form.withConfig({\n  displayName: \"pages__Form\",\n  componentId: \"sc-107eczz-2\"\n})([\"width:95%;max-width:550px;display:flex;margin:15px auto;position:relative;button,input{outline:none;}\"]);\nvar SearchInput = styled.input.withConfig({\n  displayName: \"pages__SearchInput\",\n  componentId: \"sc-107eczz-3\"\n})([\"flex-grow:1;border:1px solid #d9d9d9;padding:0.7em;flex:8;padding-left:6rem;@media screen and (max-width:\", \"px){border-top-left-radius:24px;border-bottom-left-radius:24px;}@media screen and (min-width:\", \"px){border-radius:24px;}\"], UI.mediumLayoutBreak, UI.mediumLayoutBreak);\nvar BlueSearchButton = styled.button.withConfig({\n  displayName: \"pages__BlueSearchButton\",\n  componentId: \"sc-107eczz-4\"\n})([\"margin-left:-5px;border-radius:0 3px 3px 0;background-color:\", \";border:1px solid \", \";padding:0.7em;z-index:1;@media screen and (min-width:\", \"px){display:none;}svg{color:white;}\"], colors.primary, colors.primaryDark, UI.mediumLayoutBreak);\nvar CTAButtonsContainer = styled.div.withConfig({\n  displayName: \"pages__CTAButtonsContainer\",\n  componentId: \"sc-107eczz-5\"\n})([\"@media screen and (max-width:749px){display:none;}@media screen and (min-width:750px){font-family:arial,sans-serif;position:absolute;top:70px;width:260px;left:0;right:0;margin:0 auto;font-size:medium;justify-content:center;display:flex;button{color:#757575;background-color:#f2f2f2;height:36px;font-size:0.8em;font-weight:bold;border:1px solid #f2f2f2;border-radius:2px;}}\"]);\nvar SearchLargeDeviceButton = styled.button.withConfig({\n  displayName: \"pages__SearchLargeDeviceButton\",\n  componentId: \"sc-107eczz-6\"\n})([\"@media screen and (min-width:750px){margin-right:0.5em;}\"]);","map":{"version":3,"sources":["/usr/src/app/src/pages/index.tsx"],"names":["faSearch","FontAwesomeIcon","Router","useState","useDispatch","useSelector","styled","ProvinceSelector","Header","Logo","NextSEOIndex","appEnv","colors","UI","TS","loadCountryProvinces","postClearAll","setSearchKey","Home","props","hookSearchField","hookSetSearchField","state","uiReducer","searchProvince","dispatch","onSubmit","e","console","log","preventDefault","push","pathname","query","searchKeyword","page","provinces","string","target","value","getInitialProps","ctx","store","appCountry","getState","formReducer","states","MainContainer","main","SearchBarContainer","div","Form","form","SearchInput","input","mediumLayoutBreak","BlueSearchButton","button","primary","primaryDark","CTAButtonsContainer","SearchLargeDeviceButton"],"mappings":"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","sourcesContent":["import { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Router } from 'next/router';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { ProvinceSelector } from '../components/elements/form/ProvinceSelector';\nimport { Header } from '../components/pages/index/Header';\nimport { Logo } from '../components/pages/index/Logo';\nimport { NextSEOIndex } from '../components/seo/NextSEOIndex';\nimport { appEnv } from '../constants/Env.constant';\nimport { colors } from '../constants/UI/Colors.constant';\nimport { UI } from '../constants/UI/UI.constant';\nimport { TS } from '../helpers/LanguageHelper';\nimport { loadCountryProvinces } from '../store/actions/form.actions';\nimport { postClearAll } from '../store/actions/post.action';\nimport { setSearchKey } from '../store/actions/ui.action';\nimport { IProvince } from '../types/Form.types';\n\ninterface IProps {\n  provinces: IProvince[];\n}\nconst Home = (props: IProps) => {\n  const [hookSearchField, hookSetSearchField] = useState<string>(\"\");\n\n  const { searchProvince } = useSelector<any, any>(state => state.uiReducer);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = async e => {\n    console.log(\"Submitting search\");\n\n    e.preventDefault();\n\n    // validate and set our keyword to the state\n\n    await dispatch(setSearchKey(\"searchKeyword\", hookSearchField));\n\n    await dispatch(postClearAll()); // clear post state, if present.\n\n    Router.push({\n      pathname: \"/posts\",\n      query: {\n        searchProvince,\n        searchKeyword: hookSearchField,\n        page: 1\n      }\n    });\n  };\n\n  return (\n    <>\n      <NextSEOIndex />\n      <Header />\n      <MainContainer>\n        <Logo />\n\n        <Form id=\"search-form\" onSubmit={onSubmit}>\n          <SearchBarContainer>\n            <ProvinceSelector provinces={props.provinces} />\n\n            <SearchInput\n              type=\"text\"\n              placeholder={TS.string(\"form\", \"indexSearchInput\")}\n              name=\"q\"\n              value={hookSearchField}\n              onChange={e => {\n                hookSetSearchField(e.target.value);\n              }}\n            />\n          </SearchBarContainer>\n\n          <BlueSearchButton type=\"submit\" form=\"search-form\">\n            <FontAwesomeIcon icon={faSearch} />\n          </BlueSearchButton>\n\n          <CTAButtonsContainer>\n            <SearchLargeDeviceButton type=\"submit\" form=\"search-form\">\n              {TS.string(\"landing\", \"searchButton\")}\n            </SearchLargeDeviceButton>\n          </CTAButtonsContainer>\n        </Form>\n      </MainContainer>\n    </>\n  );\n};\n\nexport default Home;\n\nHome.getInitialProps = async ctx => {\n  await ctx.store.dispatch(loadCountryProvinces(appEnv.appCountry));\n\n  const provinces = ctx.store.getState().formReducer.states;\n\n  return {\n    provinces\n  };\n};\n\nconst MainContainer = styled.main`\n  margin-top: 75px;\n\n  i {\n    color: white;\n  }\n\n  @media screen and (min-width: 750px) {\n    margin-top: 150px;\n  }\n`;\n\nconst SearchBarContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  position: relative;\n\n  flex: 10;\n\n  .MuiInput-root {\n    position: absolute;\n    top: 0;\n    left: 21px;\n    height: 100%;\n  }\n`;\n\nconst Form = styled.form`\n  width: 95%;\n  max-width: 550px;\n  display: flex;\n  margin: 15px auto;\n\n  position: relative;\n  button,\n  input {\n    outline: none;\n  }\n`;\n\nconst SearchInput = styled.input`\n  flex-grow: 1;\n  border: 1px solid #d9d9d9;\n  padding: 0.7em;\n  flex: 8;\n  padding-left: 6rem;\n\n  /*MOBILE ONLY CODE*/\n  @media screen and (max-width: ${UI.mediumLayoutBreak}px) {\n    border-top-left-radius: 24px;\n    border-bottom-left-radius: 24px;\n  }\n\n  /*DESKTOP ONLY CODE*/\n  @media screen and (min-width: ${UI.mediumLayoutBreak}px) {\n    border-radius: 24px;\n  }\n`;\n\nconst BlueSearchButton = styled.button`\n  margin-left: -5px;\n  border-radius: 0 3px 3px 0;\n  background-color: ${colors.primary};\n  border: 1px solid ${colors.primaryDark};\n  padding: 0.7em;\n  z-index: 1;\n\n  @media screen and (min-width: ${UI.mediumLayoutBreak}px) {\n    display: none;\n  }\n\n  svg {\n    color: white;\n  }\n`;\n\nconst CTAButtonsContainer = styled.div`\n  @media screen and (max-width: 749px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 750px) {\n    font-family: arial, sans-serif;\n    position: absolute;\n    top: 70px;\n    width: 260px;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    font-size: medium;\n    justify-content: center;\n    display: flex;\n\n    button {\n      color: #757575;\n      background-color: #f2f2f2;\n      height: 36px;\n      font-size: 0.8em;\n      font-weight: bold;\n      border: 1px solid #f2f2f2;\n      border-radius: 2px;\n    }\n  }\n`;\n\nconst SearchLargeDeviceButton = styled.button`\n  @media screen and (min-width: 750px) {\n    margin-right: 0.5em;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}