{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/pages/posts/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Pagination from '@material-ui/lab/Pagination';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { SearchResults } from '../../components/pages/posts/results/SearchResults';\nimport { SearchBar } from '../../components/pages/posts/SearchBar';\nimport { SearchLogo } from '../../components/pages/posts/SearchLogo';\nimport { SearchTabs } from '../../components/pages/posts/SearchTabs';\nimport { NextSEOPosts } from '../../components/seo/NextSEOPosts';\nimport { appEnv } from '../../constants/Env.constant';\nimport { colors } from '../../constants/UI/Colors.constant';\nimport { UI } from '../../constants/UI/UI.constant';\nimport { loadCountryProvinces } from '../../store/actions/form.actions';\n\nconst Posts = ({\n  provinces,\n  posts,\n  paginationData\n}) => {\n  var _posts$, _posts$2;\n\n  const router = useRouter();\n  const {\n    searchProvince,\n    searchKeyword\n  } = router.query;\n  useEffect(() => {\n    console.log(paginationData);\n  }, [paginationData]);\n  useEffect(() => {\n    // scroll to top on pagination our router.query change\n    window.scrollTo(0, 0);\n  }, [router.query]);\n\n  const onPageChange = page => {\n    router.push({\n      pathname: \"/posts\",\n      query: {\n        searchProvince,\n        searchKeyword,\n        page\n      }\n    });\n  };\n\n  const jobRole = ((_posts$ = posts[0]) === null || _posts$ === void 0 ? void 0 : _posts$.jobRoles[0]) || searchKeyword || \"\"; // lets assume the job role based on the first result. If not found, use user searchKeyword\n\n  return __jsx(React.Fragment, null, posts && __jsx(NextSEOPosts, {\n    jobRole: jobRole,\n    postsQty: posts.length,\n    city: ((_posts$2 = posts[0]) === null || _posts$2 === void 0 ? void 0 : _posts$2.city) || null,\n    stateCode: searchProvince,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), __jsx(SearchContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(SearchHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(SearchLogo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), __jsx(SearchBar, {\n    provinces: provinces,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), __jsx(SearchMain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(SearchTabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), __jsx(SearchResults, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), __jsx(PaginationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(Pagination, {\n    size: \"large\",\n    color: \"primary\",\n    page: paginationData.page,\n    count: paginationData.totalPages,\n    onChange: (e, page) => {\n      console.log(`CHANGING TO PAGE ${page}`);\n      onPageChange(page);\n    },\n    hideNextButton: !paginationData.hasNextPage,\n    hidePrevButton: !paginationData.hasPrevPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Posts;\n\nPosts.getInitialProps = async ctx => {\n  await ctx.store.dispatch(loadCountryProvinces(appEnv.appCountry));\n  const provinces = ctx.store.getState().formReducer.states; // populate province dropdown\n  // const { searchProvince, searchKeyword, page = 1 } = ctx.query;\n  // await ctx.store.dispatch(\n  //   postReadFeed(page, 40, searchProvince, searchKeyword, false)\n  // );\n  // const { posts } = ctx.store.getState().postReducer;\n  // const { paginationData } = ctx.store.getState().uiReducer;\n\n  return {\n    provinces,\n    posts: null,\n    paginationData: null\n  };\n};\n\nexport const PaginationContainer = styled.div.withConfig({\n  displayName: \"posts__PaginationContainer\",\n  componentId: \"sc-90uezp-0\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nexport const SearchMain = styled.div.withConfig({\n  displayName: \"posts__SearchMain\",\n  componentId: \"sc-90uezp-1\"\n})([\"@media screen and (min-width:\", \"px){margin-left:13rem;margin-right:7.7rem;max-width:700px;margin-top:4rem;}\"], UI.mediumLayoutBreak);\nexport const SearchHeader = styled.div.withConfig({\n  displayName: \"posts__SearchHeader\",\n  componentId: \"sc-90uezp-2\"\n})([\"display:flex;flex-wrap:wrap;flex:1;@media screen and (min-width:\", \"px){flex:8;margin-top:1rem;}\"], UI.mediumLayoutBreak);\nexport const SearchContainer = styled.div.withConfig({\n  displayName: \"posts__SearchContainer\",\n  componentId: \"sc-90uezp-3\"\n})([\"padding:1rem;@media screen and (min-width:\", \"px){padding:0;}a{color:\", \";&:visited{color:\", \";}}\"], UI.mediumLayoutBreak, colors.primary, colors.accent);","map":{"version":3,"sources":["/usr/src/app/src/pages/posts/index.tsx"],"names":["Pagination","useRouter","useEffect","styled","SearchResults","SearchBar","SearchLogo","SearchTabs","NextSEOPosts","appEnv","colors","UI","loadCountryProvinces","Posts","provinces","posts","paginationData","router","searchProvince","searchKeyword","query","console","log","window","scrollTo","onPageChange","page","push","pathname","jobRole","jobRoles","length","city","totalPages","e","hasNextPage","hasPrevPage","getInitialProps","ctx","store","dispatch","appCountry","getState","formReducer","states","PaginationContainer","div","SearchMain","mediumLayoutBreak","SearchHeader","SearchContainer","primary","accent"],"mappings":"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","sourcesContent":["import Pagination from '@material-ui/lab/Pagination';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { SearchResults } from '../../components/pages/posts/results/SearchResults';\nimport { SearchBar } from '../../components/pages/posts/SearchBar';\nimport { SearchLogo } from '../../components/pages/posts/SearchLogo';\nimport { SearchTabs } from '../../components/pages/posts/SearchTabs';\nimport { NextSEOPosts } from '../../components/seo/NextSEOPosts';\nimport { appEnv } from '../../constants/Env.constant';\nimport { colors } from '../../constants/UI/Colors.constant';\nimport { UI } from '../../constants/UI/UI.constant';\nimport { loadCountryProvinces } from '../../store/actions/form.actions';\nimport { IProvince } from '../../types/Form.types';\nimport { IPost } from '../../types/Post.types';\nimport { IPaginationData } from '../../types/UI.types';\n\ninterface IProps {\n  provinces: IProvince[];\n  posts: IPost[];\n  paginationData: IPaginationData;\n}\n\nconst Posts = ({ provinces, posts, paginationData }: IProps) => {\n  const router = useRouter();\n\n  const { searchProvince, searchKeyword } = router.query;\n\n  useEffect(() => {\n    console.log(paginationData);\n  }, [paginationData]);\n\n  useEffect(() => {\n    // scroll to top on pagination our router.query change\n    window.scrollTo(0, 0);\n  }, [router.query]);\n\n  const onPageChange = (page: number) => {\n    router.push({\n      pathname: \"/posts\",\n      query: {\n        searchProvince,\n        searchKeyword,\n        page\n      }\n    });\n  };\n\n  const jobRole = posts[0]?.jobRoles[0] || searchKeyword || \"\"; // lets assume the job role based on the first result. If not found, use user searchKeyword\n\n  return (\n    <>\n      {posts && (\n        <NextSEOPosts\n          jobRole={jobRole}\n          postsQty={posts.length}\n          city={posts[0]?.city || null}\n          stateCode={searchProvince}\n        />\n      )}\n      <SearchContainer>\n        <SearchHeader>\n          <SearchLogo />\n          <SearchBar provinces={provinces} />\n        </SearchHeader>\n\n        <SearchMain>\n          <SearchTabs />\n          <SearchResults posts={posts} />\n\n          <PaginationContainer>\n            <Pagination\n              size=\"large\"\n              color=\"primary\"\n              page={paginationData.page}\n              count={paginationData.totalPages}\n              onChange={(e, page) => {\n                console.log(`CHANGING TO PAGE ${page}`);\n                onPageChange(page);\n              }}\n              hideNextButton={!paginationData.hasNextPage}\n              hidePrevButton={!paginationData.hasPrevPage}\n            />\n          </PaginationContainer>\n        </SearchMain>\n      </SearchContainer>\n    </>\n  );\n};\n\nexport default Posts;\n\nPosts.getInitialProps = async ctx => {\n  await ctx.store.dispatch(loadCountryProvinces(appEnv.appCountry));\n  const provinces = ctx.store.getState().formReducer.states; // populate province dropdown\n\n  // const { searchProvince, searchKeyword, page = 1 } = ctx.query;\n  // await ctx.store.dispatch(\n  //   postReadFeed(page, 40, searchProvince, searchKeyword, false)\n  // );\n\n  // const { posts } = ctx.store.getState().postReducer;\n  // const { paginationData } = ctx.store.getState().uiReducer;\n\n  return {\n    provinces,\n    posts: null,\n    paginationData: null\n  };\n};\n\nexport const PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SearchMain = styled.div`\n  /*DESKTOP ONLY CODE*/\n  @media screen and (min-width: ${UI.mediumLayoutBreak}px) {\n    margin-left: 13rem;\n    margin-right: 7.7rem;\n    max-width: 700px;\n    margin-top: 4rem;\n  }\n`;\n\nexport const SearchHeader = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n\n  /*DESKTOP ONLY CODE*/\n  @media screen and (min-width: ${UI.mediumLayoutBreak}px) {\n    flex: 8;\n    margin-top: 1rem;\n  }\n`;\n\nexport const SearchContainer = styled.div`\n  padding: 1rem;\n\n  /*DESKTOP ONLY CODE*/\n  @media screen and (min-width: ${UI.mediumLayoutBreak}px) {\n    padding: 0;\n  }\n\n  a {\n    color: ${colors.primary};\n    &:visited {\n      color: ${colors.accent};\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}