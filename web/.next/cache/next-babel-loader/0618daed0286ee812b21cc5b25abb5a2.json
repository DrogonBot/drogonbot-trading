{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { MenuItem, Select } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { colors } from '../../../constants/UI/Colors.constant';\nimport { UI } from '../../../constants/UI/UI.constant';\nimport { setSearchKey } from '../../../store/actions/ui.action';\nexport const ProvinceSelector = ({\n  provinces\n}) => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    searchKeyword\n  } = router.query;\n  const {\n    searchProvince\n  } = useSelector(state => state.uiReducer);\n\n  const onChangeProvince = async e => {\n    const selectedProvince = e.target.value; //  update our redux (we'll need this info for our post requests)\n\n    await dispatch(setSearchKey(\"searchProvince\", selectedProvince));\n\n    if (!searchKeyword) {\n      return;\n    }\n\n    router.push({\n      pathname: \"/posts\",\n      query: {\n        searchProvince: e.target.value,\n        searchKeyword,\n        page: 1 // since its a new search, page will be always 1!\n\n      }\n    });\n  };\n\n  const onRenderProvinces = () => {\n    return provinces.map(province => __jsx(MenuItem, {\n      key: province.stateName,\n      value: province.stateCode\n    }, province.stateCode));\n  };\n\n  return __jsx(Container, null, __jsx(Select, {\n    value: searchProvince,\n    onChange: onChangeProvince\n  }, onRenderProvinces()));\n};\nconst Container = styled.div.withConfig({\n  displayName: \"ProvinceSelector__Container\",\n  componentId: \"sc-12bi6i-0\"\n})([\"@media screen and (min-width:\", \"){border-bottom:1px solid silver;}.MuiInput-underline:after{border-bottom:2px solid \", \";}.MuiInputBase-root{height:100%;}.MuiInput-underline:before{border-bottom:unset;}\"], UI.mediumLayoutBreak, colors.primary);","map":null,"metadata":{},"sourceType":"module"}