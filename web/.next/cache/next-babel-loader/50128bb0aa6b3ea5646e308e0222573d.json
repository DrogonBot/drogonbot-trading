{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst INITIAL_STATE = {\n  counter: 0\n};\nexport const counterReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case COUNTER_CHANGE:\n      return _objectSpread({}, state, {\n        counter: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nexport const COUNTER_CHANGE = \"COUNTER_CHANGE\";","map":{"version":3,"sources":["/home/jonit/Personal_projects/emprego-urgente/empregourgente-backend/web/src/store/reducers/counter.reducer.ts"],"names":["INITIAL_STATE","counter","counterReducer","state","action","type","COUNTER_CHANGE","payload"],"mappings":";;;;;;AAAA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE;AADW,CAAtB;AAIA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,cAAL;AACE,+BAAYH,KAAZ;AAAmBF,QAAAA,OAAO,EAAEG,MAAM,CAACG;AAAnC;;AAEF;AACE,aAAOJ,KAAP;AALJ;AAOD,CARM;AAUP,OAAO,MAAMG,cAAc,GAAG,gBAAvB","sourcesContent":["const INITIAL_STATE = {\n  counter: 0\n};\n\nexport const counterReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case COUNTER_CHANGE:\n      return { ...state, counter: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const COUNTER_CHANGE = \"COUNTER_CHANGE\";\n"]},"metadata":{},"sourceType":"module"}