{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Pagination from '@material-ui/lab/Pagination';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { SearchResults } from '../../components/pages/posts/results/SearchResults';\nimport { SearchBar } from '../../components/pages/posts/SearchBar';\nimport { SearchLogo } from '../../components/pages/posts/SearchLogo';\nimport { SearchTabs } from '../../components/pages/posts/SearchTabs';\nimport { NextSEOPosts } from '../../components/seo/NextSEOPosts';\nimport { appEnv } from '../../constants/Env.constant';\nimport { colors } from '../../constants/UI/Colors.constant';\nimport { UI } from '../../constants/UI/UI.constant';\nimport { loadCountryProvinces } from '../../store/actions/form.actions';\nimport { postReadFeed } from '../../store/actions/post.action';\n\nconst Posts = ({\n  provinces,\n  posts,\n  paginationData\n}) => {\n  var _posts$, _posts$2;\n\n  const router = useRouter();\n  const {\n    searchProvince,\n    searchKeyword\n  } = router.query;\n  useEffect(() => {\n    console.log(paginationData);\n  }, [paginationData]);\n  useEffect(() => {\n    // scroll to top on pagination our router.query change\n    window.scrollTo(0, 0);\n  }, [router.query]);\n\n  const onPageChange = page => {\n    router.push({\n      pathname: \"/posts\",\n      query: {\n        searchProvince,\n        searchKeyword,\n        page\n      }\n    });\n  };\n\n  const jobRole = ((_posts$ = posts[0]) === null || _posts$ === void 0 ? void 0 : _posts$.jobRoles[0]) || searchKeyword || \"\"; // lets assume the job role based on the first result. If not found, use user searchKeyword\n\n  return __jsx(React.Fragment, null, posts && __jsx(NextSEOPosts, {\n    jobRole: jobRole,\n    postsQty: posts.length,\n    city: ((_posts$2 = posts[0]) === null || _posts$2 === void 0 ? void 0 : _posts$2.city) || null,\n    stateCode: searchProvince\n  }), __jsx(SearchContainer, null, __jsx(SearchHeader, null, __jsx(SearchLogo, null), __jsx(SearchBar, {\n    provinces: provinces\n  })), __jsx(SearchMain, null, __jsx(SearchTabs, null), __jsx(SearchResults, {\n    posts: posts\n  }), __jsx(PaginationContainer, null, __jsx(Pagination, {\n    size: \"large\",\n    color: \"primary\",\n    page: paginationData.page,\n    count: paginationData.totalPages,\n    onChange: (e, page) => {\n      console.log(`CHANGING TO PAGE ${page}`);\n      onPageChange(page);\n    },\n    hideNextButton: !paginationData.hasNextPage,\n    hidePrevButton: !paginationData.hasPrevPage\n  })))));\n};\n\nexport default Posts;\n\nPosts.getInitialProps = async ctx => {\n  await ctx.store.dispatch(loadCountryProvinces(appEnv.appCountry));\n  console.log(\"Loading provinces...\");\n  const provinces = ctx.store.getState().formReducer.states; // populate province dropdown\n\n  console.log(\"Loading pagination data...\");\n  const {\n    searchProvince,\n    searchKeyword,\n    page = 1\n  } = ctx.query;\n  console.log(ctx.query);\n  await ctx.store.dispatch(postReadFeed(page, 40, searchProvince, searchKeyword, false));\n  const {\n    posts\n  } = ctx.store.getState().postReducer;\n  const {\n    paginationData\n  } = ctx.store.getState().uiReducer;\n  return {\n    provinces,\n    posts,\n    paginationData\n  };\n};\n\nexport const PaginationContainer = styled.div.withConfig({\n  displayName: \"posts__PaginationContainer\",\n  componentId: \"sc-90uezp-0\"\n})([\"display:flex;justify-content:center;align-items:center;\"]);\nexport const SearchMain = styled.div.withConfig({\n  displayName: \"posts__SearchMain\",\n  componentId: \"sc-90uezp-1\"\n})([\"@media screen and (min-width:\", \"px){margin-left:13rem;margin-right:7.7rem;max-width:700px;margin-top:4rem;}\"], UI.mediumLayoutBreak);\nexport const SearchHeader = styled.div.withConfig({\n  displayName: \"posts__SearchHeader\",\n  componentId: \"sc-90uezp-2\"\n})([\"display:flex;flex-wrap:wrap;flex:1;@media screen and (min-width:\", \"px){flex:8;margin-top:1rem;}\"], UI.mediumLayoutBreak);\nexport const SearchContainer = styled.div.withConfig({\n  displayName: \"posts__SearchContainer\",\n  componentId: \"sc-90uezp-3\"\n})([\"padding:1rem;@media screen and (min-width:\", \"px){padding:0;}a{color:\", \";&:visited{color:\", \";}}\"], UI.mediumLayoutBreak, colors.primary, colors.accent);","map":null,"metadata":{},"sourceType":"module"}