{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport class GenericHelper {}\n\n_defineProperty(GenericHelper, \"parseMaskedInput\", (unit, delimiter, value) => {\n  const parsedValue = value.replace(unit, \"\").replace(/\\./g, \"\").replace(/\\,/g, delimiter);\n  return parseFloat(parsedValue);\n});\n\n_defineProperty(GenericHelper, \"generateUrlParams\", (baseUrl, params) => {\n  const values = Object.keys(params).map(key => params[key]);\n  const everyNull = values.every(value => value === null || undefined);\n\n  if (everyNull) {\n    return baseUrl;\n  }\n\n  baseUrl += `?`;\n  Object.entries(params).map(([key, value]) => {\n    if (value) {\n      baseUrl += `${key}=${value}&`;\n    }\n  });\n  baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n  return baseUrl;\n});","map":{"version":3,"sources":["/usr/src/app/src/helpers/GenericHelper.ts"],"names":["GenericHelper","unit","delimiter","value","parsedValue","replace","parseFloat","baseUrl","params","values","Object","keys","map","key","everyNull","every","undefined","entries","slice","length"],"mappings":";;AAAA,OAAO,MAAMA,aAAN,CAAoB;;gBAAdA,a,sBACsB,CAC/BC,IAD+B,EAE/BC,SAF+B,EAG/BC,KAH+B,KAIpB;AACX,QAAMC,WAAW,GAAGD,KAAK,CACtBE,OADiB,CACTJ,IADS,EACH,EADG,EAEjBI,OAFiB,CAET,KAFS,EAEF,EAFE,EAGjBA,OAHiB,CAGT,KAHS,EAGFH,SAHE,CAApB;AAKA,SAAOI,UAAU,CAACF,WAAD,CAAjB;AACD,C;;gBAZUJ,a,uBAcuB,CAACO,OAAD,EAAUC,MAAV,KAAqB;AACrD,QAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,GAApB,CAAwBC,GAAG,IAAIL,MAAM,CAACK,GAAD,CAArC,CAAf;AAEA,QAAMC,SAAS,GAAGL,MAAM,CAACM,KAAP,CAAaZ,KAAK,IAAIA,KAAK,KAAK,IAAV,IAAkBa,SAAxC,CAAlB;;AAEA,MAAIF,SAAJ,EAAe;AACb,WAAOP,OAAP;AACD;;AAEDA,EAAAA,OAAO,IAAK,GAAZ;AAEAG,EAAAA,MAAM,CAACO,OAAP,CAAeT,MAAf,EAAuBI,GAAvB,CAA2B,CAAC,CAACC,GAAD,EAAMV,KAAN,CAAD,KAAkB;AAC3C,QAAIA,KAAJ,EAAW;AACTI,MAAAA,OAAO,IAAK,GAAEM,GAAI,IAAGV,KAAM,GAA3B;AACD;AACF,GAJD;AAMAI,EAAAA,OAAO,GAAGA,OAAO,CAACW,KAAR,CAAc,CAAd,EAAiBX,OAAO,CAACY,MAAR,GAAiB,CAAlC,CAAV;AAEA,SAAOZ,OAAP;AACD,C","sourcesContent":["export class GenericHelper {\n  public static parseMaskedInput = (\n    unit: string,\n    delimiter: \".\",\n    value: string\n  ): number => {\n    const parsedValue = value\n      .replace(unit, \"\")\n      .replace(/\\./g, \"\")\n      .replace(/\\,/g, delimiter);\n\n    return parseFloat(parsedValue);\n  };\n\n  public static generateUrlParams = (baseUrl, params) => {\n    const values = Object.keys(params).map(key => params[key]);\n\n    const everyNull = values.every(value => value === null || undefined);\n\n    if (everyNull) {\n      return baseUrl;\n    }\n\n    baseUrl += `?`;\n\n    Object.entries(params).map(([key, value]) => {\n      if (value) {\n        baseUrl += `${key}=${value}&`;\n      }\n    });\n\n    baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n\n    return baseUrl;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}