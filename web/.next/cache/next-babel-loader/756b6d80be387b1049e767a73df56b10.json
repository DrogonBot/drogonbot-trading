{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport withRedux from 'next-redux-wrapper';\nimport App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { NextSEOApp } from '../components/seo/NextSEOApp';\nimport { MUITheme } from '../constants/UI/Theme.constant';\nimport { persistor, store } from '../store/reducers/persist.store';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}; // Anything returned here can be accessed by the client\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    // pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    // @ts-ignore\n    const {\n      Component,\n      pageProps,\n      store: initialStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: initialStore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, __jsx(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, __jsx(NextSEOApp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), __jsx(ThemeProvider, {\n      theme: MUITheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n} // makeStore function that returns a new store for every request\n\n\nconst makeStore = () => store; // withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/usr/src/app/src/pages/_app.tsx"],"names":["ThemeProvider","withRedux","App","React","Provider","PersistGate","NextSEOApp","MUITheme","persistor","store","MyApp","getInitialProps","Component","ctx","pageProps","render","initialStore","props","makeStore"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,iCAAjC;;AAEA,MAAMC,KAAN,SAAoBR,GAApB,CAAwB;AACtB,eAAoBS,eAApB,CAAoC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAApC,EAAwD;AACtD,UAAMC,SAAS,GAAGF,SAAS,CAACD,eAAV,GACd,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADQ,GAEd,EAFJ,CADsD,CAKtD;;AACA,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AAEMC,EAAAA,MAAP,GAAgB;AACd;AACA;AACA,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBL,MAAAA,KAAK,EAAEO;AAA/B,QAAgD,KAAKC,KAA3D;AAEA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,OAAO,EAAE,IAAtB;AAA4B,MAAA,SAAS,EAAER,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAED,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeO,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAFF,CADF,CADF;AAUD;;AAzBqB,C,CA4BxB;;;AACA,MAAMI,SAAS,GAAG,MAAMT,KAAxB,C,CAEA;;;AACA,eAAeR,SAAS,CAACiB,SAAD,CAAT,CAAqBR,KAArB,CAAf","sourcesContent":["import { ThemeProvider } from '@material-ui/core/styles';\nimport withRedux from 'next-redux-wrapper';\nimport App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { NextSEOApp } from '../components/seo/NextSEOApp';\nimport { MUITheme } from '../constants/UI/Theme.constant';\nimport { persistor, store } from '../store/reducers/persist.store';\n\nclass MyApp extends App {\n  public static async getInitialProps({ Component, ctx }) {\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n\n    // Anything returned here can be accessed by the client\n    return { pageProps };\n  }\n\n  public render() {\n    // pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    // @ts-ignore\n    const { Component, pageProps, store: initialStore } = this.props;\n\n    return (\n      <Provider store={initialStore}>\n        <PersistGate loading={null} persistor={persistor}>\n          <NextSEOApp />\n          <ThemeProvider theme={MUITheme}>\n            <Component {...pageProps} />\n          </ThemeProvider>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\n// makeStore function that returns a new store for every request\nconst makeStore = () => store;\n\n// withRedux wrapper that passes the store to the App Component\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}