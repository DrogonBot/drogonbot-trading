{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { UI } from '../../../constants/UI/UI.constant';\nimport { setSearchKey } from '../../../store/actions/ui.action';\nimport { ProvinceSelector } from '../../elements/form/ProvinceSelector';\nexport var SearchBar = function SearchBar(props) {\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var searchProvince = router.query.searchProvince;\n\n  var _useState = useState(\"\"),\n      hookSearchInput = _useState[0],\n      setHookSearchInput = _useState[1];\n\n  var onSubmit = function onSubmit(e) {\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(setSearchKey(\"searchKeyword\", hookSearchInput)));\n\n          case 3:\n            // console.log(\"submitted search!\");\n            // console.log(router.pathname);\n            router.push({\n              pathname: \"/posts\",\n              query: {\n                searchProvince: searchProvince,\n                searchKeyword: hookSearchInput,\n                page: 1 // since its a new search, page will be always 1!\n\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(FormContainer, {\n    onSubmit: onSubmit\n  }, __jsx(SearchBarInput, {\n    type: \"text\",\n    title: \"Search\",\n    onChange: function onChange(e) {\n      return setHookSearchInput(e.target.value);\n    },\n    value: hookSearchInput\n  }), __jsx(ProvinceContainer, null, __jsx(ProvinceSelector, {\n    provinces: props.provinces\n  })));\n};\nvar FormContainer = styled.form.withConfig({\n  displayName: \"SearchBar__FormContainer\",\n  componentId: \"sc-1je134r-0\"\n})([\"flex:100%;margin-bottom:1rem;display:flex;flex-wrap:wrap;flex-direction:row-reverse;@media screen and (min-width:\", \"px){flex:7;justify-content:center;align-items:center;display:flex;max-width:700px;margin-left:4rem;}\"], UI.mediumLayoutBreak);\nvar ProvinceContainer = styled.div.withConfig({\n  displayName: \"SearchBar__ProvinceContainer\",\n  componentId: \"sc-1je134r-1\"\n})([\"flex:20%;display:flex;justify-content:center;height:3.3rem;padding-right:1rem;@media screen and (min-width:\", \"px){width:100%;max-width:70px;}[class*=\\\"MuiInput\\\"]{width:100%;border-radius:24px;padding-right:5px;}\"], UI.mediumLayoutBreak);\nvar SearchBarInput = styled.input.withConfig({\n  displayName: \"SearchBar__SearchBarInput\",\n  componentId: \"sc-1je134r-2\"\n})([\"border:1px solid #dfe1e5;border-radius:24px;height:44px;background-image:url(\\\"/images/search.png\\\");background-repeat:no-repeat;background-position:98% 50%;font-size:14px;padding-left:20px;flex:80%;:focus,:focus,:focus{outline:none;}:hover{box-shadow:0 1px 6px 0 rgba(32,33,36,0.28);}\"]);","map":null,"metadata":{},"sourceType":"module"}