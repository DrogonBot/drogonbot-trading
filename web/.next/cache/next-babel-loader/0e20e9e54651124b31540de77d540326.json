{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jonit/Personal_projects/emprego-urgente/empregourgente-backend/web/src/components/pages/posts/SearchBar.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { UI } from '../../../constants/UI/UI.constant';\nimport { setSearchKey } from '../../../store/actions/ui.action';\nimport { ProvinceSelector } from '../../elements/form/ProvinceSelector';\nexport var SearchBar = function SearchBar(props) {\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var searchProvince = router.query.searchProvince;\n\n  var _useState = useState(\"\"),\n      hookSearchInput = _useState[0],\n      setHookSearchInput = _useState[1];\n\n  var onSubmit = function onSubmit(e) {\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(setSearchKey(\"searchKeyword\", hookSearchInput)));\n\n          case 3:\n            // console.log(\"submitted search!\");\n            // console.log(router.pathname);\n            router.push({\n              pathname: \"/posts\",\n              query: {\n                searchProvince: searchProvince,\n                searchKeyword: hookSearchInput,\n                page: 1 // since its a new search, page will be always 1!\n\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(FormContainer, {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(SearchBarInput, {\n    type: \"text\",\n    title: \"Search\",\n    onChange: function onChange(e) {\n      return setHookSearchInput(e.target.value);\n    },\n    value: hookSearchInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), __jsx(ProvinceContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(ProvinceSelector, {\n    provinces: props.provinces,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\nvar FormContainer = styled.form.withConfig({\n  displayName: \"SearchBar__FormContainer\",\n  componentId: \"sc-1je134r-0\"\n})([\"flex:100%;margin-bottom:1rem;display:flex;flex-wrap:wrap;flex-direction:row-reverse;@media screen and (min-width:\", \"px){flex:7;justify-content:center;align-items:center;display:flex;max-width:700px;margin-left:4rem;}\"], UI.mediumLayoutBreak);\nvar ProvinceContainer = styled.div.withConfig({\n  displayName: \"SearchBar__ProvinceContainer\",\n  componentId: \"sc-1je134r-1\"\n})([\"flex:20%;display:flex;justify-content:center;height:3.3rem;padding-right:1rem;@media screen and (min-width:\", \"px){width:100%;max-width:70px;}[class*=\\\"MuiInput\\\"]{width:100%;border-radius:24px;padding-right:5px;}\"], UI.mediumLayoutBreak);\nvar SearchBarInput = styled.input.withConfig({\n  displayName: \"SearchBar__SearchBarInput\",\n  componentId: \"sc-1je134r-2\"\n})([\"border:1px solid #dfe1e5;border-radius:24px;height:44px;background-image:url(\\\"/images/search.png\\\");background-repeat:no-repeat;background-position:98% 50%;font-size:14px;padding-left:20px;flex:80%;:focus,:focus,:focus{outline:none;}:hover{box-shadow:0 1px 6px 0 rgba(32,33,36,0.28);}\"]);","map":{"version":3,"sources":["/home/jonit/Personal_projects/emprego-urgente/empregourgente-backend/web/src/components/pages/posts/SearchBar.tsx"],"names":["useRouter","useState","useDispatch","styled","UI","setSearchKey","ProvinceSelector","SearchBar","props","dispatch","router","searchProvince","query","hookSearchInput","setHookSearchInput","onSubmit","e","preventDefault","push","pathname","searchKeyword","page","target","value","provinces","FormContainer","form","mediumLayoutBreak","ProvinceContainer","div","SearchBarInput","input"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,EAAT,QAAmB,mCAAnB;AACA,SAASC,YAAT,QAA6B,kCAA7B;AAEA,SAASC,gBAAT,QAAiC,sCAAjC;AAMA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAmB;AAC1C,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAMQ,MAAM,GAAGV,SAAS,EAAxB;AAF0C,MAIlCW,cAJkC,GAIfD,MAAM,CAACE,KAJQ,CAIlCD,cAJkC;;AAAA,kBAMIV,QAAQ,CAAS,EAAT,CANZ;AAAA,MAMnCY,eANmC;AAAA,MAMlBC,kBANkB;;AAQ1C,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AACfA,YAAAA,CAAC,CAACC,cAAF;AADe;AAAA,6CAGTR,QAAQ,CAACJ,YAAY,CAAC,eAAD,EAAkBQ,eAAlB,CAAb,CAHC;;AAAA;AAKf;AAEA;AAEAH,YAAAA,MAAM,CAACQ,IAAP,CAAY;AACVC,cAAAA,QAAQ,EAAE,QADA;AAEVP,cAAAA,KAAK,EAAE;AACLD,gBAAAA,cAAc,EAAdA,cADK;AAELS,gBAAAA,aAAa,EAAEP,eAFV;AAGLQ,gBAAAA,IAAI,EAAE,CAHD,CAGG;;AAHH;AAFG,aAAZ;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAmBA,SACE,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEN,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAIF,kBAAkB,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAAtB;AAAA,KAHb;AAIE,IAAA,KAAK,EAAEV,eAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,SAAS,EAAEL,KAAK,CAACgB,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF;AAaD,CAxCM;AA0CP,IAAMC,aAAa,GAAGtB,MAAM,CAACuB,IAAV;AAAA;AAAA;AAAA,kOAQetB,EAAE,CAACuB,iBARlB,CAAnB;AAmBA,IAAMC,iBAAiB,GAAGzB,MAAM,CAAC0B,GAAV;AAAA;AAAA;AAAA,8NASWzB,EAAE,CAACuB,iBATd,CAAvB;AAqBA,IAAMG,cAAc,GAAG3B,MAAM,CAAC4B,KAAV;AAAA;AAAA;AAAA,qSAApB","sourcesContent":["import { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { UI } from '../../../constants/UI/UI.constant';\nimport { setSearchKey } from '../../../store/actions/ui.action';\nimport { IProvince } from '../../../types/Form.types';\nimport { ProvinceSelector } from '../../elements/form/ProvinceSelector';\n\ninterface IProps {\n  provinces: IProvince[];\n}\n\nexport const SearchBar = (props: IProps) => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  const { searchProvince } = router.query;\n\n  const [hookSearchInput, setHookSearchInput] = useState<string>(\"\");\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    await dispatch(setSearchKey(\"searchKeyword\", hookSearchInput));\n\n    // console.log(\"submitted search!\");\n\n    // console.log(router.pathname);\n\n    router.push({\n      pathname: \"/posts\",\n      query: {\n        searchProvince,\n        searchKeyword: hookSearchInput,\n        page: 1 // since its a new search, page will be always 1!\n      }\n    });\n  };\n\n  return (\n    <FormContainer onSubmit={onSubmit}>\n      <SearchBarInput\n        type=\"text\"\n        title=\"Search\"\n        onChange={e => setHookSearchInput(e.target.value)}\n        value={hookSearchInput}\n      />\n      <ProvinceContainer>\n        <ProvinceSelector provinces={props.provinces} />\n      </ProvinceContainer>\n    </FormContainer>\n  );\n};\n\nconst FormContainer = styled.form`\n  flex: 100%;\n  margin-bottom: 1rem;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row-reverse;\n\n  /*DESKTOP ONLY CODE*/\n  @media screen and (min-width: ${UI.mediumLayoutBreak}px) {\n    flex: 7;\n    justify-content: center;\n    align-items: center;\n    display: flex;\n    max-width: 700px;\n\n    margin-left: 4rem;\n  }\n`;\n\nconst ProvinceContainer = styled.div`\n  flex: 20%;\n  display: flex;\n  justify-content: center;\n\n  height: 3.3rem;\n  padding-right: 1rem;\n\n  /*DESKTOP ONLY CODE*/\n  @media screen and (min-width: ${UI.mediumLayoutBreak}px) {\n    width: 100%;\n    max-width: 70px;\n  }\n\n  [class*=\"MuiInput\"] {\n    width: 100%;\n    border-radius: 24px;\n    padding-right: 5px;\n  }\n`;\n\nconst SearchBarInput = styled.input`\n  border: 1px solid #dfe1e5;\n  border-radius: 24px;\n  height: 44px;\n  background-image: url(\"/images/search.png\");\n  background-repeat: no-repeat;\n  background-position: 98% 50%;\n  font-size: 14px;\n  padding-left: 20px;\n\n  flex: 80%;\n\n  :focus,\n  :focus,\n  :focus {\n    outline: none;\n  }\n\n  :hover {\n    box-shadow: 0 1px 6px 0 rgba(32, 33, 36, 0.28);\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}